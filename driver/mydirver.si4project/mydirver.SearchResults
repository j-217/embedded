---- struct device Matches (2288 in 354 files) ----
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 162 : 	struct device_driver drv;
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 311 : 	struct device *dev;
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 334 : 	struct device dev;
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 443 : 	bool (*match)(struct device *dev);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 444 : 	struct acpi_device * (*find_companion)(struct device *);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 445 : 	void (*setup)(struct device *);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 446 : 	void (*cleanup)(struct device *);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 477 : int acpi_pm_device_sleep_state(struct device *, int *, int);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 490 : static inline int acpi_pm_device_sleep_state(struct device *d, int *p, int m)
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 502 : int acpi_pm_device_run_wake(struct device *, bool);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 508 : static inline int acpi_pm_device_run_wake(struct device *dev, bool enable)
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 516 : int acpi_pm_device_sleep_wake(struct device *, bool);
acpi_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 523 : static inline int acpi_pm_device_sleep_wake(struct device *dev, bool enable)
ghes.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 54 : int ghes_edac_register(struct ghes *ghes, struct device *dev);
ghes.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 64 : static inline int ghes_edac_register(struct ghes *ghes, struct device *dev)
processor.h (D:\Virtual Machines\Shared\linux-3.14\include\acpi) line 215 : 	struct device *dev; /* Processor device. */
device.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 2 :  * Arch specific extensions to struct device
dma-coherent.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 9 : int dma_alloc_from_coherent(struct device *dev, ssize_t size,
dma-coherent.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 11 : int dma_release_from_coherent(struct device *dev, int order, void *vaddr);
dma-coherent.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 13 : int dma_mmap_from_coherent(struct device *dev, struct vm_area_struct *vma,
dma-coherent.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 20 : dma_declare_coherent_memory(struct device *dev, dma_addr_t bus_addr,
dma-coherent.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 24 : dma_release_declared_memory(struct device *dev);
dma-coherent.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 27 : dma_mark_declared_memory_occupied(struct device *dev,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 12 : dma_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 16 : dma_free_coherent(struct device *dev, size_t size, void *cpu_addr,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 19 : static inline void *dma_alloc_attrs(struct device *dev, size_t size,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 27 : static inline void dma_free_attrs(struct device *dev, size_t size,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 39 : dma_map_single(struct device *dev, void *ptr, size_t size,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 43 : dma_unmap_single(struct device *dev, dma_addr_t dma_addr, size_t size,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 47 : dma_map_sg(struct device *dev, struct scatterlist *sg, int nents,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 51 : dma_unmap_sg(struct device *dev, struct scatterlist *sg, int nhwentries,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 55 : dma_map_page(struct device *dev, struct page *page, unsigned long offset,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 59 : dma_unmap_page(struct device *dev, dma_addr_t dma_address, size_t size,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 63 : dma_sync_single_for_cpu(struct device *dev, dma_addr_t dma_handle, size_t size,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 67 : dma_sync_single_range_for_cpu(struct device *dev, dma_addr_t dma_handle,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 72 : dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg, int nelems,
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 80 : dma_mapping_error(struct device *dev, dma_addr_t dma_addr);
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 83 : dma_supported(struct device *dev, u64 mask);
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 86 : dma_set_mask(struct device *dev, u64 mask);
dma-mapping-broken.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 92 : dma_cache_sync(struct device *dev, void *vaddr, size_t size,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 10 : static inline dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 29 : static inline void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 42 : static inline int dma_map_sg_attrs(struct device *dev, struct scatterlist *sg,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 59 : static inline void dma_unmap_sg_attrs(struct device *dev, struct scatterlist *sg,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 71 : static inline dma_addr_t dma_map_page(struct device *dev, struct page *page,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 86 : static inline void dma_unmap_page(struct device *dev, dma_addr_t addr,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 97 : static inline void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 109 : static inline void dma_sync_single_for_device(struct device *dev,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 121 : static inline void dma_sync_single_range_for_cpu(struct device *dev,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 135 : static inline void dma_sync_single_range_for_device(struct device *dev,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 150 : dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 162 : dma_sync_sg_for_device(struct device *dev, struct scatterlist *sg,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 179 : extern int dma_common_mmap(struct device *dev, struct vm_area_struct *vma,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 184 :  * @dev: valid struct device pointer, or NULL for ISA and EISA-like devices
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 196 : dma_mmap_attrs(struct device *dev, struct vm_area_struct *vma, void *cpu_addr,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 208 : static inline int dma_mmap_writecombine(struct device *dev, struct vm_area_struct *vma,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 217 : dma_common_get_sgtable(struct device *dev, struct sg_table *sgt,
dma-mapping-common.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 221 : dma_get_sgtable_attrs(struct device *dev, struct sg_table *sgt, void *cpu_addr,
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 47 : struct device;
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 51 : struct device_node;
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\asm-generic) line 129 : static inline int gpio_export_link(struct device *dev, const char *name,
drmP.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 83 : struct device_node;
drmP.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 1044 : 	struct device *kdev;		/**< Linux device */
drmP.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 1174 : 	struct device *dev;             /**< Device structure */
drmP.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 1425 : extern int of_get_drm_display_mode(struct device_node *np,
drmP.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 1663 : 				 struct device *parent);
drm_crtc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 600 : 	struct device *kdev;
drm_crtc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 601 : 	struct device_attribute *attr;
drm_mipi_dsi.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 62 : 	struct device *dev;
drm_mipi_dsi.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 110 : 	struct device dev;
drm_mipi_dsi.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 134 : 	struct device_driver driver;
drm_panel.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 42 : 	struct device *dev;
drm_panel.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 74 : struct drm_panel *of_drm_find_panel(struct device_node *np);
drm_panel.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 76 : static inline struct drm_panel *of_drm_find_panel(struct device_node *np)
drm_sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 9 : extern int drm_class_device_register(struct device *dev);
drm_sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 10 : extern void drm_class_device_unregister(struct device *dev);
exynos_drm.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 58 : 	struct device *hdmi_dev;
exynos_drm.h (D:\Virtual Machines\Shared\linux-3.14\include\drm) line 59 : 	struct device *mixer_dev;
ttm_page_alloc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm\ttm) line 32 : struct device;
ttm_page_alloc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm\ttm) line 83 : extern int ttm_dma_populate(struct ttm_dma_tt *ttm_dma, struct device *dev);
ttm_page_alloc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm\ttm) line 84 : extern void ttm_dma_unpopulate(struct ttm_dma_tt *ttm_dma, struct device *dev);
ttm_page_alloc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm\ttm) line 100 : 				   struct device *dev)
ttm_page_alloc.h (D:\Virtual Machines\Shared\linux-3.14\include\drm\ttm) line 105 : 				      struct device *dev)
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : static inline void acpi_preset_companion(struct device *dev,
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 153 : int acpi_register_gsi (struct device *dev, u32 gsi, int triggering, int polarity);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 411 : 					       const struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 413 : static inline bool acpi_driver_match_device(struct device *dev,
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 414 : 					    const struct device_driver *drv)
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 419 : int acpi_device_uevent_modalias(struct device *, struct kobj_uevent_env *);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 420 : int acpi_device_modalias(struct device *, char *, int);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 490 : 	const struct acpi_device_id *ids, const struct device *dev)
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 495 : static inline bool acpi_driver_match_device(struct device *dev,
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 496 : 					    const struct device_driver *drv)
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 501 : static inline int acpi_device_uevent_modalias(struct device *dev,
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 507 : static inline int acpi_device_modalias(struct device *dev,
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 543 : int acpi_dev_runtime_suspend(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 544 : int acpi_dev_runtime_resume(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 545 : int acpi_subsys_runtime_suspend(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 546 : int acpi_subsys_runtime_resume(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 548 : static inline int acpi_dev_runtime_suspend(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 549 : static inline int acpi_dev_runtime_resume(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 550 : static inline int acpi_subsys_runtime_suspend(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 551 : static inline int acpi_subsys_runtime_resume(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 555 : int acpi_dev_suspend_late(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 556 : int acpi_dev_resume_early(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 557 : int acpi_subsys_prepare(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 558 : int acpi_subsys_suspend_late(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 559 : int acpi_subsys_resume_early(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 561 : static inline int acpi_dev_suspend_late(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 562 : static inline int acpi_dev_resume_early(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 563 : static inline int acpi_subsys_prepare(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 564 : static inline int acpi_subsys_suspend_late(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 565 : static inline int acpi_subsys_resume_early(struct device *dev) { return 0; }
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 569 : struct acpi_device *acpi_dev_pm_get_node(struct device *dev);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 570 : int acpi_dev_pm_attach(struct device *dev, bool power_on);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 571 : void acpi_dev_pm_detach(struct device *dev, bool power_off);
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 573 : static inline struct acpi_device *acpi_dev_pm_get_node(struct device *dev)
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 577 : static inline int acpi_dev_pm_attach(struct device *dev, bool power_on)
acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 581 : static inline void acpi_dev_pm_detach(struct device *dev, bool power_off) {}
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 :  * @dev:	struct device of the DMA controller to be used in the filter
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : 	struct device	*dev;
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 :  * @dev:		struct device of this controller
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : 	struct device		*dev;
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : int acpi_dma_controller_register(struct device *dev,
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : int acpi_dma_controller_free(struct device *dev);
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : int devm_acpi_dma_controller_register(struct device *dev,
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 70 : void devm_acpi_dma_controller_free(struct device *dev);
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 72 : struct dma_chan *acpi_dma_request_slave_chan_by_index(struct device *dev,
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 74 : struct dma_chan *acpi_dma_request_slave_chan_by_name(struct device *dev,
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 81 : static inline int acpi_dma_controller_register(struct device *dev,
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 88 : static inline int acpi_dma_controller_free(struct device *dev)
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 92 : static inline int devm_acpi_dma_controller_register(struct device *dev,
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 99 : static inline void devm_acpi_dma_controller_free(struct device *dev)
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 104 : 		struct device *dev, size_t index)
acpi_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 109 : 		struct device *dev, const char *name)
ahci_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : struct device;
ahci_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : 	int (*init)(struct device *dev, void __iomem *addr);
ahci_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : 	void (*exit)(struct device *dev);
ahci_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : 	int (*suspend)(struct device *dev);
ahci_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : 	int (*resume)(struct device *dev);
arm-cci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : struct device_node;
arm-cci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : extern int cci_ace_get_port(struct device_node *dn);
arm-cci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 33 : extern int __cci_control_port_by_device(struct device_node *dn, bool enable);
arm-cci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : static inline int cci_ace_get_port(struct device_node *dn)
arm-cci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : static inline int __cci_control_port_by_device(struct device_node *dn,
ata_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : extern int __pata_platform_probe(struct device *dev,
atmdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : struct device;
atmdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 167 : 	struct device class_dev;	/* sysfs device */
atmdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 224 : struct atm_dev *atm_dev_register(const char *type, struct device *parent,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : struct device;
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : 	struct device_attribute **attrs;
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : 	int (*match)(struct attribute_container *, struct device *);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : void attribute_container_create_device(struct device *dev,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : 						 struct device *,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : 						 struct device *));
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : void attribute_container_add_device(struct device *dev,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 48 : 					      struct device *,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : 					      struct device *));
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : void attribute_container_remove_device(struct device *dev,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 52 : 						  struct device *,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : 						  struct device *));
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 54 : void attribute_container_device_trigger(struct device *dev, 
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : 						  struct device *,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : 						  struct device *));
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 58 : void attribute_container_trigger(struct device *dev, 
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : 					   struct device *));
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : int attribute_container_add_attrs(struct device *classdev);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 62 : int attribute_container_add_class_device(struct device *classdev);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : 						 struct device *dev,
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : 						 struct device *classdev);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : void attribute_container_remove_attrs(struct device *classdev);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : void attribute_container_class_device_del(struct device *classdev);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : struct attribute_container *attribute_container_classdev_to_container(struct device *);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 69 : struct device *attribute_container_find_class_device(struct attribute_container *, struct device *);
attribute_container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 70 : struct device_attribute **attribute_container_classdev_to_attrs(const struct device *classdev);
backing-dev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : struct device;
backing-dev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 102 : 	struct device *dev;
backing-dev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 116 : int bdi_register(struct backing_dev_info *bdi, struct device *parent,
backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 106 : 	struct device dev;
backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : 	struct device *dev, void *devdata, const struct backlight_ops *ops,
backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : 	struct device *dev, const char *name, struct device *parent,
backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 125 : extern void devm_backlight_device_unregister(struct device *dev,
backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 148 : struct backlight_device *of_find_backlight_by_node(struct device_node *node);
backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 151 : of_find_backlight_by_node(struct device_node *node)
basic_mmio_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : struct device;
basic_mmio_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : int bgpio_init(struct bgpio_chip *bgc, struct device *dev,
blkdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 388 : 	struct device		*dev;
blkdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1014 : extern void blk_pm_runtime_init(struct request_queue *q, struct device *dev);
blkdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1021 : 	struct device *dev) {}
blktrace_api.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : extern void blk_trace_remove_sysfs(struct device *dev);
blktrace_api.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : extern int blk_trace_init_sysfs(struct device *dev);
blktrace_api.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : static inline int blk_trace_init_sysfs(struct device *dev)
bsg-lib.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 29 : struct device;
bsg-lib.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : 	struct device *dev;
bsg-lib.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : int bsg_setup_queue(struct device *dev, struct request_queue *q, char *name,
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 9 : 	struct device *class_dev;
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 10 : 	struct device *parent;
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 14 : 	void (*release)(struct device *);
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : 			      struct device *parent, const char *name,
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 19 : 			      void (*release)(struct device *));
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : 				     struct device *parent, const char *name,
bsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : 				     void (*release)(struct device *))
c2port.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : struct device;
c2port.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : 	struct device *dev;
cb710.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 97 : static inline struct device *cb710_slot_dev(struct cb710_slot *slot)
cb710.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 102 : static inline struct device *cb710_chip_dev(struct cb710_chip *chip)
clk-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 213 : int __clk_init(struct device *dev, struct clk *clk);
clk-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 215 : struct clk *__clk_register(struct device *dev, struct clk_hw *hw);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 227 : struct clk *clk_register_fixed_rate(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 230 : struct clk *clk_register_fixed_rate_with_accuracy(struct device *dev,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 234 : void of_fixed_clk_setup(struct device_node *np);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 268 : struct clk *clk_register_gate(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 324 : struct clk *clk_register_divider(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 328 : struct clk *clk_register_divider_table(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 373 : struct clk *clk_register_mux(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 378 : struct clk *clk_register_mux_table(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 383 : void of_fixed_factor_clk_setup(struct device_node *node);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 404 : struct clk *clk_register_fixed_factor(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 432 : struct clk *clk_register_composite(struct device *dev, const char *name,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 450 : struct clk *clk_register(struct device *dev, struct clk_hw *hw);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 451 : struct clk *devm_clk_register(struct device *dev, struct clk_hw *hw);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 454 : void devm_clk_unregister(struct device *dev, struct clk *clk);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 484 : typedef void (*of_clk_init_cb_t)(struct device_node *);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 499 : int of_clk_add_provider(struct device_node *np,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 503 : void of_clk_del_provider(struct device_node *np);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 507 : int of_clk_get_parent_count(struct device_node *np);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 508 : const char *of_clk_get_parent_name(struct device_node *np, int index);
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 514 : static inline int of_clk_add_provider(struct device_node *np,
clk-provider.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 533 : static inline const char *of_clk_get_parent_name(struct device_node *np,
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 19 : struct device;
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : struct clk *clk_get(struct device *dev, const char *id);
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 176 : struct clk *devm_clk_get(struct device *dev, const char *id);
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 236 : void devm_clk_put(struct device *dev, struct clk *clk);
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 298 : static inline struct clk *clk_get(struct device *dev, const char *id)
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 303 : static inline struct clk *devm_clk_get(struct device *dev, const char *id)
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 310 : static inline void devm_clk_put(struct device *dev, struct clk *clk) {}
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 379 : 			struct device *dev);
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 381 : struct device_node;
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 385 : struct clk *of_clk_get(struct device_node *np, int index);
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 386 : struct clk *of_clk_get_by_name(struct device_node *np, const char *name);
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 389 : static inline struct clk *of_clk_get(struct device_node *np, int index)
clk.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 393 : static inline struct clk *of_clk_get_by_name(struct device_node *np,
clkdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : struct device;
clkdev.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : int clk_add_alias(const char *, const char *, char *, struct device *);
clocksource.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 342 : struct device_node;
clocksource.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 343 : typedef void(*clocksource_of_init_fn)(struct device_node *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 4 : struct device;
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 7 : 	int (*bind)(struct device *, struct device *, void *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 8 : 	void (*unbind)(struct device *, struct device *, void *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 11 : int component_add(struct device *, const struct component_ops *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : void component_del(struct device *, const struct component_ops *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 14 : int component_bind_all(struct device *, void *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : void component_unbind_all(struct device *, void *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : 	int (*add_components)(struct device *, struct master *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : 	int (*bind)(struct device *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : 	void (*unbind)(struct device *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : int component_master_add(struct device *, const struct component_master_ops *);
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : void component_master_del(struct device *,
component.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : 	int (*compare)(struct device *, void *), void *compare_data);
container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : 	struct device dev;
container.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : static inline struct container_dev *to_container_dev(struct device *dev)
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : struct device;
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct device_node;
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : 	struct device dev;
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : extern struct device *get_cpu_device(unsigned cpu);
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 33 : extern bool arch_find_n_match_cpu_physical_id(struct device_node *cpun,
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 36 : extern int cpu_add_dev_attr(struct device_attribute *attr);
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : extern void cpu_remove_dev_attr(struct device_attribute *attr);
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : extern int arch_cpu_uevent(struct device *dev, struct kobj_uevent_env *env);
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : extern ssize_t arch_print_cpu_modalias(struct device *dev,
cpu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 52 : 				       struct device_attribute *attr,
cpu_cooling.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 :  * @np: a valid struct device_node to the cooling device device tree node.
cpu_cooling.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : of_cpufreq_cooling_register(struct device_node *np,
cpu_cooling.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : of_cpufreq_cooling_register(struct device_node *np,
cpu_cooling.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 71 : of_cpufreq_cooling_register(struct device_node *np,
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : 	struct device 		*cd;
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : 	int	(*add_requester)    (struct dca_provider *, struct device *);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : 	int	(*remove_requester) (struct dca_provider *, struct device *);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : 	u8	(*get_tag)	    (struct dca_provider *, struct device *,
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : 	int	(*dev_managed)      (struct dca_provider *, struct device *);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 58 : int register_dca_provider(struct dca_provider *dca, struct device *dev);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : void unregister_dca_provider(struct dca_provider *dca, struct device *dev);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : int dca_add_requester(struct device *dev);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 69 : int dca_remove_requester(struct device *dev);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 71 : u8 dca3_get_tag(struct device *dev, int cpu);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 76 : int dca_sysfs_add_provider(struct dca_provider *dca, struct device *dev);
dca.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 78 : int dca_sysfs_add_req(struct dca_provider *dca, struct device *dev, int slot);
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 83 : 	int (*target)(struct device *dev, unsigned long *freq, u32 flags);
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 84 : 	int (*get_dev_status)(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 86 : 	int (*get_cur_freq)(struct device *dev, unsigned long *freq);
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 87 : 	void (*exit)(struct device *dev);
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : 	struct device dev;
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 179 : extern struct devfreq *devfreq_add_device(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 190 : extern struct dev_pm_opp *devfreq_recommended_opp(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 192 : extern int devfreq_register_opp_notifier(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 194 : extern int devfreq_unregister_opp_notifier(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 218 : static inline struct devfreq *devfreq_add_device(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 241 : static inline struct dev_pm_opp *devfreq_recommended_opp(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 247 : static inline int devfreq_register_opp_notifier(struct device *dev,
devfreq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 253 : static inline int devfreq_unregister_opp_notifier(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 32 : struct device;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 33 : struct device_private;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : struct device_driver;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : struct device_node;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 107 : 	struct device		*dev_root;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 108 : 	struct device_attribute	*dev_attrs;	/* use dev_groups instead */
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 113 : 	int (*match)(struct device *dev, struct device_driver *drv);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 114 : 	int (*uevent)(struct device *dev, struct kobj_uevent_env *env);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 115 : 	int (*probe)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 116 : 	int (*remove)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 117 : 	void (*shutdown)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 119 : 	int (*online)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 120 : 	int (*offline)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 122 : 	int (*suspend)(struct device *dev, pm_message_t state);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 123 : 	int (*resume)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 142 : 	const struct device_type	*type;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 146 : 			 struct device *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 147 : 			 const struct device_type *type);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 148 : struct device *subsys_dev_iter_next(struct subsys_dev_iter *iter);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 151 : int bus_for_each_dev(struct bus_type *bus, struct device *start, void *data,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 152 : 		     int (*fn)(struct device *dev, void *data));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 153 : struct device *bus_find_device(struct bus_type *bus, struct device *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 155 : 			       int (*match)(struct device *dev, void *data));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : struct device *bus_find_device_by_name(struct bus_type *bus,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 157 : 				       struct device *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 159 : struct device *subsys_find_device_by_id(struct bus_type *bus, unsigned int id,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 160 : 					struct device *hint);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 161 : int bus_for_each_drv(struct bus_type *bus, struct device_driver *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 162 : 		     void *data, int (*fn)(struct device_driver *, void *));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 164 : 			   int (*compare)(const struct device *a,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 165 : 					  const struct device *b));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 179 : /* All 4 notifers below get called with the target struct device *
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 197 :  * struct device_driver - The basic device driver structure
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 228 : struct device_driver {
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 240 : 	int (*probe) (struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 241 : 	int (*remove) (struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 242 : 	void (*shutdown) (struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 243 : 	int (*suspend) (struct device *dev, pm_message_t state);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 244 : 	int (*resume) (struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 253 : extern int __must_check driver_register(struct device_driver *drv);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 254 : extern void driver_unregister(struct device_driver *drv);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 256 : extern struct device_driver *driver_find(const char *name,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 266 : 	ssize_t (*show)(struct device_driver *driver, char *buf);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 267 : 	ssize_t (*store)(struct device_driver *driver, const char *buf,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 280 : extern int __must_check driver_create_file(struct device_driver *driver,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 282 : extern void driver_remove_file(struct device_driver *driver,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 285 : extern int __must_check driver_for_each_device(struct device_driver *drv,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 286 : 					       struct device *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 288 : 					       int (*fn)(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 290 : struct device *driver_find_device(struct device_driver *drv,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 291 : 				  struct device *start, void *data,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 292 : 				  int (*match)(struct device *dev, void *data));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 311 : 	int (*add_dev)(struct device *dev, struct subsys_interface *sif);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 312 : 	int (*remove_dev)(struct device *dev, struct subsys_interface *sif);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 359 : 	int (*dev_uevent)(struct device *dev, struct kobj_uevent_env *env);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 360 : 	char *(*devnode)(struct device *dev, umode_t *mode);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 363 : 	void (*dev_release)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 365 : 	int (*suspend)(struct device *dev, pm_message_t state);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 366 : 	int (*resume)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 369 : 	const void *(*namespace)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 378 : 	const struct device_type	*type;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 398 : int class_compat_create_link(struct class_compat *cls, struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 399 : 			     struct device *device_link);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 400 : void class_compat_remove_link(struct class_compat *cls, struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 401 : 			      struct device *device_link);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 405 : 				struct device *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 406 : 				const struct device_type *type);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 407 : extern struct device *class_dev_iter_next(struct class_dev_iter *iter);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 410 : extern int class_for_each_device(struct class *class, struct device *start,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 412 : 				 int (*fn)(struct device *dev, void *data));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 413 : extern struct device *class_find_device(struct class *class,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 414 : 					struct device *start, const void *data,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 415 : 					int (*match)(struct device *, const void *));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 471 : 	int (*add_dev)		(struct device *, struct class_interface *);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 472 : 	void (*remove_dev)	(struct device *, struct class_interface *);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 492 :  * The type of device, "struct device" is embedded in. A class
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 500 : struct device_type {
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 503 : 	int (*uevent)(struct device *dev, struct kobj_uevent_env *env);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 504 : 	char *(*devnode)(struct device *dev, umode_t *mode,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 506 : 	void (*release)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 512 : struct device_attribute {
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 514 : 	ssize_t (*show)(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 516 : 	ssize_t (*store)(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 521 : 	struct device_attribute attr;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 525 : ssize_t device_show_ulong(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 527 : ssize_t device_store_ulong(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 529 : ssize_t device_show_int(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 531 : ssize_t device_store_int(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 533 : ssize_t device_show_bool(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 535 : ssize_t device_store_bool(struct device *dev, struct device_attribute *attr,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 539 : 	struct device_attribute dev_attr_##_name = __ATTR(_name, _mode, _show, _store)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 541 : 	struct device_attribute dev_attr_##_name = __ATTR_RW(_name)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 543 : 	struct device_attribute dev_attr_##_name = __ATTR_RO(_name)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 545 : 	struct device_attribute dev_attr_##_name = __ATTR_WO(_name)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 556 : 	struct device_attribute dev_attr_##_name =		\
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 559 : extern int device_create_file(struct device *device,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 560 : 			      const struct device_attribute *entry);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 561 : extern void device_remove_file(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 562 : 			       const struct device_attribute *attr);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 563 : extern int __must_check device_create_bin_file(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 565 : extern void device_remove_bin_file(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 567 : extern int device_schedule_callback_owner(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 568 : 		void (*func)(struct device *dev), struct module *owner);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 575 : typedef void (*dr_release_t)(struct device *dev, void *res);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 576 : typedef int (*dr_match_t)(struct device *dev, void *res, void *match_data);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 586 : extern void devres_for_each_res(struct device *dev, dr_release_t release,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 588 : 				void (*fn)(struct device *, void *, void *),
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 591 : extern void devres_add(struct device *dev, void *res);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 592 : extern void *devres_find(struct device *dev, dr_release_t release,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 594 : extern void *devres_get(struct device *dev, void *new_res,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 596 : extern void *devres_remove(struct device *dev, dr_release_t release,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 598 : extern int devres_destroy(struct device *dev, dr_release_t release,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 600 : extern int devres_release(struct device *dev, dr_release_t release,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 604 : extern void * __must_check devres_open_group(struct device *dev, void *id,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 606 : extern void devres_close_group(struct device *dev, void *id);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 607 : extern void devres_remove_group(struct device *dev, void *id);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 608 : extern int devres_release_group(struct device *dev, void *id);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 611 : extern void *devm_kmalloc(struct device *dev, size_t size, gfp_t gfp);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 612 : static inline void *devm_kzalloc(struct device *dev, size_t size, gfp_t gfp)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 616 : static inline void *devm_kmalloc_array(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 623 : static inline void *devm_kcalloc(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 628 : extern void devm_kfree(struct device *dev, void *p);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 630 : void __iomem *devm_ioremap_resource(struct device *dev, struct resource *res);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 631 : void __iomem *devm_request_and_ioremap(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 635 : int devm_add_action(struct device *dev, void (*action)(void *), void *data);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 636 : void devm_remove_action(struct device *dev, void (*action)(void *), void *data);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 638 : struct device_dma_parameters {
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 656 :  * struct device - The basic device structure
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 662 :  * 		See the comment of the struct device_private for detail.
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 715 :  * instance of struct device. The device structure contains the information
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 722 : struct device {
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 723 : 	struct device		*parent;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 725 : 	struct device_private	*p;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 729 : 	const struct device_type *type;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 736 : 	struct device_driver *driver;	/* which driver has allocated this
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 757 : 	struct device_dma_parameters *dma_parms;
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 770 : 	struct device_node	*of_node; /* associated device tree node */
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 783 : 	void	(*release)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 790 : static inline struct device *kobj_to_dev(struct kobject *kobj)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 792 : 	return container_of(kobj, struct device, kobj);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 795 : /* Get the wakeup routines, which depend on struct device */
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 798 : static inline const char *dev_name(const struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 808 : int dev_set_name(struct device *dev, const char *name, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 811 : static inline int dev_to_node(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 815 : static inline void set_dev_node(struct device *dev, int node)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 820 : static inline int dev_to_node(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 824 : static inline void set_dev_node(struct device *dev, int node)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 829 : static inline struct pm_subsys_data *dev_to_psd(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 834 : static inline unsigned int dev_get_uevent_suppress(const struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 839 : static inline void dev_set_uevent_suppress(struct device *dev, int val)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 844 : static inline int device_is_registered(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 849 : static inline void device_enable_async_suspend(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 855 : static inline void device_disable_async_suspend(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 861 : static inline bool device_async_suspend_enabled(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 866 : static inline void pm_suspend_ignore_children(struct device *dev, bool enable)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 871 : static inline void dev_pm_syscore_device(struct device *dev, bool val)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 878 : static inline void device_lock(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 883 : static inline int device_trylock(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 888 : static inline void device_unlock(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 898 : extern int __must_check device_register(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 899 : extern void device_unregister(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 900 : extern void device_initialize(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 901 : extern int __must_check device_add(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 902 : extern void device_del(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 903 : extern int device_for_each_child(struct device *dev, void *data,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 904 : 		     int (*fn)(struct device *dev, void *data));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 905 : extern struct device *device_find_child(struct device *dev, void *data,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 906 : 				int (*match)(struct device *dev, void *data));
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 907 : extern int device_rename(struct device *dev, const char *new_name);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 908 : extern int device_move(struct device *dev, struct device *new_parent,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 910 : extern const char *device_get_devnode(struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 913 : extern void *dev_get_drvdata(const struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 914 : extern int dev_set_drvdata(struct device *dev, void *data);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 916 : static inline bool device_supports_offline(struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 924 : extern int device_offline(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 925 : extern int device_online(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 929 : extern struct device *__root_device_register(const char *name,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 939 : extern void root_device_unregister(struct device *root);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 941 : static inline void *dev_get_platdata(const struct device *dev)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 950 : extern int __must_check device_bind_driver(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 951 : extern void device_release_driver(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 952 : extern int  __must_check device_attach(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 953 : extern int __must_check driver_attach(struct device_driver *drv);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 954 : extern int __must_check device_reprobe(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 959 : extern struct device *device_create_vargs(struct class *cls,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 960 : 					  struct device *parent,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 966 : struct device *device_create(struct class *cls, struct device *parent,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 970 : struct device *device_create_with_groups(struct class *cls,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 971 : 			     struct device *parent, dev_t devt, void *drvdata,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 982 : extern int (*platform_notify)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 984 : extern int (*platform_notify_remove)(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 991 : extern struct device *get_device(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 992 : extern void put_device(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 995 : extern int devtmpfs_create_node(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 996 : extern int devtmpfs_delete_node(struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 999 : static inline int devtmpfs_create_node(struct device *dev) { return 0; }
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1000 : static inline int devtmpfs_delete_node(struct device *dev) { return 0; }
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1008 : extern const char *dev_driver_string(const struct device *dev);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1014 : int dev_vprintk_emit(int level, const struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1017 : int dev_printk_emit(int level, const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1020 : int dev_printk(const char *level, const struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1023 : int dev_emerg(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1025 : int dev_alert(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1027 : int dev_crit(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1029 : int dev_err(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1031 : int dev_warn(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1033 : int dev_notice(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1035 : int _dev_info(const struct device *dev, const char *fmt, ...);
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1040 : int dev_vprintk_emit(int level, const struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1044 : int dev_printk_emit(int level, const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1047 : static inline int __dev_printk(const char *level, const struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1051 : int dev_printk(const char *level, const struct device *dev,
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1056 : int dev_emerg(const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1059 : int dev_crit(const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1062 : int dev_alert(const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1065 : int dev_err(const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1068 : int dev_warn(const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1071 : int dev_notice(const struct device *dev, const char *fmt, ...)
device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1074 : int _dev_info(const struct device *dev, const char *fmt, ...)
dio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : 	struct device dev;		/* Generic device interface */
dio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : 	struct device dev;
dio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 92 : 	struct device_driver driver;
dma-buf.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : struct device;
dma-buf.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 73 : 	int (*attach)(struct dma_buf *, struct device *,
dma-buf.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 146 : 	struct device *dev;
dma-buf.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 166 : 							struct device *dev);
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 58 : struct device;
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 70 : static inline struct cma *dev_get_cma_area(struct device *dev)
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 77 : static inline void dev_set_cma_area(struct device *dev, struct cma *cma)
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 106 : static inline int dma_declare_contiguous(struct device *dev, phys_addr_t size,
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : struct page *dma_alloc_from_contiguous(struct device *dev, int count,
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 120 : bool dma_release_from_contiguous(struct device *dev, struct page *pages,
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 127 : static inline struct cma *dev_get_cma_area(struct device *dev)
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 132 : static inline void dev_set_cma_area(struct device *dev, struct cma *cma) { }
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 144 : int dma_declare_contiguous(struct device *dev, phys_addr_t size,
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 151 : struct page *dma_alloc_from_contiguous(struct device *dev, int count,
dma-contiguous.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 158 : bool dma_release_from_contiguous(struct device *dev, struct page *pages,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : struct device;
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : extern void debug_dma_map_page(struct device *dev, struct page *page,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : extern void debug_dma_mapping_error(struct device *dev, dma_addr_t dma_addr);
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : extern void debug_dma_unmap_page(struct device *dev, dma_addr_t addr,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : extern void debug_dma_map_sg(struct device *dev, struct scatterlist *sg,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : extern void debug_dma_unmap_sg(struct device *dev, struct scatterlist *sglist,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : extern void debug_dma_alloc_coherent(struct device *dev, size_t size,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : extern void debug_dma_free_coherent(struct device *dev, size_t size,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : extern void debug_dma_sync_single_for_cpu(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : extern void debug_dma_sync_single_for_device(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : extern void debug_dma_sync_single_range_for_cpu(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 73 : extern void debug_dma_sync_single_range_for_device(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 78 : extern void debug_dma_sync_sg_for_cpu(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : extern void debug_dma_sync_sg_for_device(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 86 : extern void debug_dma_dump_mappings(struct device *dev);
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 105 : static inline void debug_dma_map_page(struct device *dev, struct page *page,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 112 : static inline void debug_dma_mapping_error(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 117 : static inline void debug_dma_unmap_page(struct device *dev, dma_addr_t addr,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 123 : static inline void debug_dma_map_sg(struct device *dev, struct scatterlist *sg,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 128 : static inline void debug_dma_unmap_sg(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 134 : static inline void debug_dma_alloc_coherent(struct device *dev, size_t size,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 139 : static inline void debug_dma_free_coherent(struct device *dev, size_t size,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 144 : static inline void debug_dma_sync_single_for_cpu(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 150 : static inline void debug_dma_sync_single_for_device(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : static inline void debug_dma_sync_single_range_for_cpu(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 164 : static inline void debug_dma_sync_single_range_for_device(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 172 : static inline void debug_dma_sync_sg_for_cpu(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 178 : static inline void debug_dma_sync_sg_for_device(struct device *dev,
dma-debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 184 : static inline void debug_dma_dump_mappings(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : 	void* (*alloc)(struct device *dev, size_t size,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : 	void (*free)(struct device *dev, size_t size,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : 	int (*mmap)(struct device *, struct vm_area_struct *,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : 	int (*get_sgtable)(struct device *dev, struct sg_table *sgt, void *,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : 	dma_addr_t (*map_page)(struct device *dev, struct page *page,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 28 : 	void (*unmap_page)(struct device *dev, dma_addr_t dma_handle,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : 	int (*map_sg)(struct device *dev, struct scatterlist *sg,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : 	void (*unmap_sg)(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : 	void (*sync_single_for_cpu)(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : 	void (*sync_single_for_device)(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : 	void (*sync_sg_for_cpu)(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : 	void (*sync_sg_for_device)(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : 	int (*mapping_error)(struct device *dev, dma_addr_t dma_addr);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : 	int (*dma_supported)(struct device *dev, u64 mask);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 52 : 	int (*set_dma_mask)(struct device *dev, u64 mask);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 54 : 	u64 (*get_required_mask)(struct device *dev);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 70 : static inline int is_device_dma_capable(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 81 : static inline u64 dma_get_mask(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 89 : int dma_set_coherent_mask(struct device *dev, u64 mask);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : static inline int dma_set_coherent_mask(struct device *dev, u64 mask)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 106 : static inline int dma_set_mask_and_coherent(struct device *dev, u64 mask)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : static inline int dma_coerce_mask_and_coherent(struct device *dev, u64 mask)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 124 : extern u64 dma_get_required_mask(struct device *dev);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 126 : static inline unsigned int dma_get_max_seg_size(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 131 : static inline unsigned int dma_set_max_seg_size(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 141 : static inline unsigned long dma_get_seg_boundary(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 147 : static inline int dma_set_seg_boundary(struct device *dev, unsigned long mask)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 157 : static inline unsigned long dma_max_pfn(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 163 : static inline void *dma_zalloc_coherent(struct device *dev, size_t size,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 189 : dma_declare_coherent_memory(struct device *dev, dma_addr_t bus_addr,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 196 : dma_release_declared_memory(struct device *dev)
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 201 : dma_mark_declared_memory_occupied(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 211 : extern void *dmam_alloc_coherent(struct device *dev, size_t size,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 213 : extern void dmam_free_coherent(struct device *dev, size_t size, void *vaddr,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 215 : extern void *dmam_alloc_noncoherent(struct device *dev, size_t size,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 217 : extern void dmam_free_noncoherent(struct device *dev, size_t size, void *vaddr,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 220 : extern int dmam_declare_coherent_memory(struct device *dev, dma_addr_t bus_addr,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 223 : extern void dmam_release_declared_memory(struct device *dev);
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 225 : static inline int dmam_declare_coherent_memory(struct device *dev,
dma-mapping.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 232 : static inline void dmam_release_declared_memory(struct device *dev)
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 289 : 	struct device device;
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 439 : 	struct device *dev;
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 487 : dmaengine_get_unmap_data(struct device *dev, int nr, gfp_t flags);
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 495 : dmaengine_get_unmap_data(struct device *dev, int nr, gfp_t flags)
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 599 :  * @dev: struct device reference for dma mapping api
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 639 : 	struct device *dev;
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1071 : struct dma_chan *dma_request_slave_channel_reason(struct device *dev,
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1073 : struct dma_chan *dma_request_slave_channel(struct device *dev, const char *name);
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1097 : 					struct device *dev, const char *name)
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1101 : static inline struct dma_chan *dma_request_slave_channel(struct device *dev,
dmaengine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1126 : 				  struct device *dev, char *name)
dmapool.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : struct dma_pool *dma_pool_create(const char *name, struct device *dev, 
dmapool.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : struct dma_pool *dmam_pool_create(const char *name, struct device *dev,
dw_dmac.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 29 : 	struct device		*dma_dev;
dynamic_debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : struct device;
dynamic_debug.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : int __dynamic_dev_dbg(struct _ddebug *descriptor, const struct device *dev,
edac.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct device;
edac.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 537 : 	struct device dev;
edac.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 580 : 	struct device dev;
edac.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 652 : 	struct device			dev;
edac.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 723 : 	struct device *pdev;
eisa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : 	struct device         dev; /* generic device */
eisa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : 	struct device_driver         driver;
eisa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 93 : 	struct device   *dev;	 /* Pointer to bridge device */
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 87 : 	struct device cdev;
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 88 : 	struct device *dev;
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 100 : 	struct device edev;
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 107 : to_enclosure_device(struct device *dev)
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 113 : to_enclosure_component(struct device *dev)
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 119 : enclosure_register(struct device *, const char *, int,
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 126 : 			 struct device *dev);
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 127 : int enclosure_remove_device(struct enclosure_device *, struct device *);
enclosure.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 128 : struct enclosure_device *enclosure_find(struct device *dev,
extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 124 : 	struct device dev;
extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 132 : 	struct device_type extcon_dev_type;
extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 138 : 	struct device_attribute *d_attrs_muex;
extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 155 : 	struct device_attribute attr_name;
extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : 	struct device_attribute attr_state;
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : struct device;
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : struct device_node;
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 479 : 	struct device *device;		/* This is the parent */
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 480 : 	struct device *dev;		/* This is this fb device */
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 685 : extern struct fb_info *framebuffer_alloc(size_t size, struct device *dev);
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 712 : extern const unsigned char *fb_firmware_edid(struct device *device);
fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 721 : extern int of_get_fb_videomode(struct device_node *np,
firewire.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 84 : 	struct device *device;
firewire.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 189 : 	struct device device;
firewire.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 208 : static inline struct fw_device *fw_device(struct device *dev)
firewire.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 224 : 	struct device device;
firewire.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 229 : static inline struct fw_unit *fw_unit(struct device *dev)
firewire.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 254 : 	struct device_driver driver;
firmware.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct device;
firmware.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : 		     struct device *device);
firmware.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : 	const char *name, struct device *device, gfp_t gfp, void *context,
firmware.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : 				   struct device *device)
firmware.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : 	const char *name, struct device *device, gfp_t gfp, void *context,
firmware.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 73 : 			    struct device *device);
fmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 77 : 	struct device_driver driver;
fmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 176 : 	struct device dev;		/* For Linux use */
fmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 177 : 	struct device *hwdev;		/* The underlying hardware device */
fmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 231 : extern int fmc_match(struct device *dev, struct device_driver *drv);
fs_enet_pd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 136 : 	struct device_node *phy_node;
gameport.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 48 : 	struct device dev;
gameport.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : 	struct device_driver driver;
genalloc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : struct device;
genalloc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 36 : struct device_node;
genalloc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 116 : extern struct gen_pool *devm_gen_pool_create(struct device *dev,
genalloc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : extern struct gen_pool *dev_get_gen_pool(struct device *dev);
genalloc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : extern struct gen_pool *of_get_named_gen_pool(struct device_node *np,
genalloc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 124 : static inline struct gen_pool *of_get_named_gen_pool(struct device_node *np,
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : extern struct device_type part_type;
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 113 : 	struct device __dev;
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 193 : 	struct device *driverfs_dev;  // FIXME: remove
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 629 : extern ssize_t part_size_show(struct device *dev,
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 630 : 			      struct device_attribute *attr, char *buf);
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 631 : extern ssize_t part_stat_show(struct device *dev,
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 632 : 			      struct device_attribute *attr, char *buf);
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 633 : extern ssize_t part_inflight_show(struct device *dev,
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 634 : 			      struct device_attribute *attr, char *buf);
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 636 : extern ssize_t part_fail_show(struct device *dev,
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 637 : 			      struct device_attribute *attr, char *buf);
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 638 : extern ssize_t part_fail_store(struct device *dev,
genhd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 639 : 			       struct device_attribute *attr,
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : struct device;
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 84 : int devm_gpio_request(struct device *dev, unsigned gpio, const char *label);
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 85 : int devm_gpio_request_one(struct device *dev, unsigned gpio,
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 87 : void devm_gpio_free(struct device *dev, unsigned int gpio);
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 96 : struct device;
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 191 : static inline int gpio_export_link(struct device *dev, const char *name,
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 262 : static inline int devm_gpio_request(struct device *dev, unsigned gpio,
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 269 : static inline int devm_gpio_request_one(struct device *dev, unsigned gpio,
gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 276 : static inline void devm_gpio_free(struct device *dev, unsigned int gpio)
gpio_keys.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 4 : struct device;
gpio_keys.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : 	int (*enable)(struct device *dev);
gpio_keys.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : 	void (*disable)(struct device *dev);
hid.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 467 : 	struct device dev;						/* device */
hid.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 669 : 	struct device_driver driver;
hidraw.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : 	struct device *dev;
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : 	struct device *parent;
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : 	struct device *dev;
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 141 : struct host1x_syncpt *host1x_syncpt_request(struct device *dev,
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 155 : struct host1x_channel *host1x_channel_request(struct device *dev);
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 223 : 	int (*is_addr_reg)(struct device *dev, u32 reg, u32 class);
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 239 : int host1x_job_pin(struct host1x_job *job, struct device *dev);
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 263 : 	struct device dev;
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 273 : static inline struct host1x_device *to_host1x_device(struct device *dev)
host1x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 286 : struct tegra_mipi_device *tegra_mipi_request(struct device *device);
hwmon-sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : 	struct device_attribute dev_attr;
hwmon-sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : 	struct device_attribute dev_attr;
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : struct device;
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : struct device *hwmon_device_register(struct device *dev);
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct device *
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : hwmon_device_register_with_groups(struct device *dev, const char *name,
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : struct device *
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : devm_hwmon_device_register_with_groups(struct device *dev, const char *name,
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : void hwmon_device_unregister(struct device *dev);
hwmon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : void devm_hwmon_device_unregister(struct device *dev);
hwspinlock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 28 : struct device;
hwspinlock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : int hwspin_lock_register(struct hwspinlock_device *bank, struct device *dev,
hyperv.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1171 : 	struct device_driver driver;
hyperv.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1187 : 	struct device device;
hyperv.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1193 : static inline struct hv_device *device_to_hv_device(struct device *d)
hyperv.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1198 : static inline struct hv_driver *drv_to_hv_drv(struct device_driver *d)
i2c-mux.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : 				struct device *mux_dev,
i2c-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : 	void		(*set_mpu_wkup_lat)(struct device *dev, long set);
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : #include <linux/device.h>	/* for struct device */
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 33 : #include <linux/of.h>		/* for struct device_node */
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : extern struct device_type i2c_adapter_type;
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 190 : 	struct device_driver driver;
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 224 : 	struct device dev;		/* the device structure		*/
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 230 : extern struct i2c_client *i2c_verify_client(struct device *dev);
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 231 : extern struct i2c_adapter *i2c_verify_adapter(struct device *dev);
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 235 : 	struct device * const dev = container_of(kobj, struct device, kobj);
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 277 : 	struct device_node *of_node;
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 436 : 	struct device dev;		/* the adapter device */
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 463 : 	struct device *parent = adapter->dev.parent;
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 472 : int i2c_for_each_dev(void *data, int (*fn)(struct device *, void *));
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 561 : extern struct i2c_client *of_find_i2c_device_by_node(struct device_node *node);
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 564 : extern struct i2c_adapter *of_find_i2c_adapter_by_node(struct device_node *node);
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 568 : static inline struct i2c_client *of_find_i2c_device_by_node(struct device_node *node)
i2c.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 573 : static inline struct i2c_adapter *of_find_i2c_adapter_by_node(struct device_node *node)
i2o.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 427 : 	struct device device;
i2o.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 469 : 	struct device_driver driver;
i2o.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 564 : 	struct device device;
i2o.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 703 : extern int i2o_dma_alloc(struct device *dev, struct i2o_dma *addr, size_t len);
i2o.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 704 : extern void i2o_dma_free(struct device *dev, struct i2o_dma *addr);
i2o.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 705 : extern int i2o_dma_realloc(struct device *dev, struct i2o_dma *addr,
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : struct device;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 178 : 	struct device	*dev, *parent;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 549 : 	struct device	gendev;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 695 : 	struct device *dev;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 733 : 	struct device		gendev;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 734 : 	struct device		*portdev;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 774 : 	struct device	*dev[2];
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 999 : int generic_ide_suspend(struct device *, pm_message_t);
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1000 : int generic_ide_resume(struct device *);
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1016 : 	struct device_driver	gen_driver;
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1107 : ssize_t ide_park_show(struct device *dev, struct device_attribute *attr,
ide.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1109 : ssize_t ide_park_store(struct device *dev, struct device_attribute *attr,
ihex.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : 					struct device *dev)
input.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 180 : 	struct device dev;
input.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 334 : struct input_dev __must_check *devm_input_allocate_device(struct device *);
interrupt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 145 : struct device;
interrupt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 148 : devm_request_threaded_irq(struct device *dev, unsigned int irq,
interrupt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 154 : devm_request_irq(struct device *dev, unsigned int irq, irq_handler_t handler,
interrupt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 162 : devm_request_any_context_irq(struct device *dev, unsigned int irq,
interrupt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 166 : extern void devm_free_irq(struct device *dev, unsigned int irq, void *dev_id);
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : struct device;
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : void __iomem * devm_ioport_map(struct device *dev, unsigned long port,
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : void devm_ioport_unmap(struct device *dev, void __iomem *addr);
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : static inline void __iomem *devm_ioport_map(struct device *dev,
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : static inline void devm_ioport_unmap(struct device *dev, void __iomem *addr)
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : void __iomem *devm_ioremap(struct device *dev, resource_size_t offset,
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : void __iomem *devm_ioremap_nocache(struct device *dev, resource_size_t offset,
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : void devm_iounmap(struct device *dev, void __iomem *addr);
io.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : void devm_ioremap_release(struct device *dev, void *res);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : struct device;
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : 			struct device *, unsigned long, int, void *);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 107 : 	int (*attach_dev)(struct iommu_domain *domain, struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 108 : 	void (*detach_dev)(struct iommu_domain *domain, struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 116 : 	int (*add_device)(struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 117 : 	void (*remove_device)(struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : 	int (*device_group)(struct device *dev, unsigned int *groupid);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 149 : 			       struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 151 : 				struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 173 : 				  struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 174 : extern void iommu_group_remove_device(struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 176 : 				    int (*fn)(struct device *, void *));
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 177 : extern struct iommu_group *iommu_group_get(struct device *dev);
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 220 : 		struct device *dev, unsigned long iova, int flags)
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 261 : 				      struct device *dev)
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 267 : 				       struct device *dev)
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 345 : 					 struct device *dev)
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 350 : static inline void iommu_group_remove_device(struct device *dev)
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 356 : 					   int (*fn)(struct device *, void *))
iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 361 : static inline struct iommu_group *iommu_group_get(struct device *dev)
ioport.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 207 : struct device;
ioport.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 213 : extern struct resource * __devm_request_region(struct device *dev,
ioport.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 222 : extern void __devm_release_region(struct device *dev, struct resource *parent,
ipack.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 100 : 	struct device dev;
ipack.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 133 : 	struct device_driver driver;
ipack.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 175 : 	struct device *parent;
ipack.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 191 : struct ipack_bus_device *ipack_bus_register(struct device *parent, int slots,
ipmi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : struct device;
ipmi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 258 : 	void (*new_smi)(int if_num, struct device *dev);
ipmi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 299 : 	struct device *dev;
ipmi_smi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : struct device;
ipmi_smi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 207 : 		      struct device            *dev,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : struct device_node;
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : 	int (*match)(struct irq_domain *d, struct device_node *node);
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : 	int (*xlate)(struct irq_domain *d, struct device_node *node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 102 : 	struct device_node *of_node;
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 114 : struct irq_domain *__irq_domain_add(struct device_node *of_node, int size,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : struct irq_domain *irq_domain_add_simple(struct device_node *of_node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 123 : struct irq_domain *irq_domain_add_legacy(struct device_node *of_node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 129 : extern struct irq_domain *irq_find_host(struct device_node *node);
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 139 : static inline struct irq_domain *irq_domain_add_linear(struct device_node *of_node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 146 : static inline struct irq_domain *irq_domain_add_nomap(struct device_node *of_node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 154 : 				struct device_node *of_node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 161 : static inline struct irq_domain *irq_domain_add_tree(struct device_node *of_node,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 211 : int irq_domain_xlate_onecell(struct irq_domain *d, struct device_node *ctrlr,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 214 : int irq_domain_xlate_twocell(struct irq_domain *d, struct device_node *ctrlr,
irqdomain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 217 : int irq_domain_xlate_onetwocell(struct irq_domain *d, struct device_node *ctrlr,
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : 	int (*match)(struct device *, unsigned int);
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 13 : 	int (*probe)(struct device *, unsigned int);
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 14 : 	int (*remove)(struct device *, unsigned int);
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : 	void (*shutdown)(struct device *, unsigned int);
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : 	int (*suspend)(struct device *, unsigned int, pm_message_t);
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : 	int (*resume)(struct device *, unsigned int);
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 19 : 	struct device_driver driver;
isa.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : 	struct device *devices;
jz4740-adc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 5 : struct device;
jz4740-adc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : int jz4740_adc_set_config(struct device *dev, uint32_t mask, uint32_t val);
lcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 79 : 	struct device dev;
lcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 114 : 	struct device *parent, void *devdata, struct lcd_ops *ops);
lcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 115 : extern struct lcd_device *devm_lcd_device_register(struct device *dev,
lcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 116 : 	const char *name, struct device *parent,
lcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 119 : extern void devm_lcd_device_unregister(struct device *dev,
leds.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct device;
leds.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : 	struct device		*dev;
leds.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 88 : extern int led_classdev_register(struct device *parent,
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 530 : extern struct device_attribute dev_attr_link_power_management_policy;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 531 : extern struct device_attribute dev_attr_unload_heads;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 532 : extern struct device_attribute dev_attr_em_message_type;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 533 : extern struct device_attribute dev_attr_em_message;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 534 : extern struct device_attribute dev_attr_sw_activity;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 593 : 	struct device 		*dev;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 676 : 	struct device		tdev;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 769 : 	struct device		tdev;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 835 : 	struct device 		*dev;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 836 : 	struct device		tdev;
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1107 : extern struct ata_host *ata_host_alloc(struct device *dev, int max_ports);
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1108 : extern struct ata_host *ata_host_alloc_pinfo(struct device *dev,
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1118 : extern void ata_host_init(struct ata_host *, struct device *, struct ata_port_operations *);
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1339 : extern struct device_attribute *ata_common_sdev_attrs[];
libata.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1450 : void ata_print_version(const struct device *dev, const char *version);
maple.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 6 : struct device;
maple.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 80 : 	struct device dev;
maple.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 85 : 	struct device_driver drv;
mc146818rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : 	void	(*wake_on)(struct device *dev);
mc146818rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 32 : 	void	(*wake_off)(struct device *dev);
mdio-mux.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 14 : int mdio_mux_init(struct device *dev,
mei_cl_bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 10 : 	struct device_driver driver;
memory.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : 	struct device dev;
memstick.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 272 : 	struct device            dev;
memstick.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 284 : 	struct device       dev;
memstick.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 306 : 	struct device_driver      driver;
memstick.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 313 : 					  struct device *dev);
miscdevice.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : struct device;
miscdevice.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : 	struct device *parent;
miscdevice.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : 	struct device *this_device;
mISDNif.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 503 : 	struct device		dev;
mISDNif.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 582 : 					struct device *parent, char *name);
mISDNif.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 590 : static inline struct mISDNdevice *dev_to_mISDN(struct device *dev)
msi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 72 : 	struct device *dev;
msi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 73 : 	struct device_node *of_node;
mv643xx_eth.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : struct device_node;
mv643xx_eth.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : 	struct device_node	*phy_node;
netdevice.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 55 : struct device;
netdevice.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1441 : 	struct device		dev;
node.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : 	struct device	dev;
nsc_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : 	struct device*	dev;	/* for dev_dbg() support, set in init  */
ntb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 52 : 	struct device_driver driver;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : struct device_node {
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 72 : 	struct device_node *np;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 78 : extern struct device_node *of_node_get(struct device_node *node);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 79 : extern void of_node_put(struct device_node *node);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : static inline struct device_node *of_node_get(struct device_node *node)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 86 : static inline void of_node_put(struct device_node *node) { }
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 92 : extern struct device_node *of_allnodes;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 93 : extern struct device_node *of_chosen;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 94 : extern struct device_node *of_aliases;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 102 : static inline bool of_node_is_root(const struct device_node *node)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 107 : static inline int of_node_check_flag(struct device_node *n, unsigned long flag)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 112 : static inline void of_node_set_flag(struct device_node *n, unsigned long flag)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 117 : extern struct device_node *of_find_all_nodes(struct device_node *prev);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 165 : static inline const char *of_node_full_name(const struct device_node *np)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 170 : extern struct device_node *of_find_node_by_name(struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 172 : extern struct device_node *of_find_node_by_type(struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 174 : extern struct device_node *of_find_compatible_node(struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 176 : extern struct device_node *of_find_matching_node_and_match(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 177 : 	struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 181 : extern struct device_node *of_find_node_by_path(const char *path);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 182 : extern struct device_node *of_find_node_by_phandle(phandle handle);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 183 : extern struct device_node *of_get_parent(const struct device_node *node);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 184 : extern struct device_node *of_get_next_parent(struct device_node *node);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 185 : extern struct device_node *of_get_next_child(const struct device_node *node,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 186 : 					     struct device_node *prev);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 187 : extern struct device_node *of_get_next_available_child(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 188 : 	const struct device_node *node, struct device_node *prev);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 190 : extern struct device_node *of_get_child_by_name(const struct device_node *node,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 194 : extern struct device_node *of_find_next_cache_node(const struct device_node *);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 195 : extern struct device_node *of_find_node_with_property(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 196 : 	struct device_node *from, const char *prop_name);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 198 : extern struct property *of_find_property(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 201 : extern int of_property_read_u32_index(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 204 : extern int of_property_read_u8_array(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 206 : extern int of_property_read_u16_array(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 208 : extern int of_property_read_u32_array(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 212 : extern int of_property_read_u64(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 215 : extern int of_property_read_string(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 218 : extern int of_property_read_string_index(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 221 : extern int of_property_match_string(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 224 : extern int of_property_count_strings(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 226 : extern int of_device_is_compatible(const struct device_node *device,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 228 : extern int of_device_is_available(const struct device_node *device);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 229 : extern const void *of_get_property(const struct device_node *node,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 232 : extern struct device_node *of_get_cpu_node(int cpu, unsigned int *thread);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 236 : extern int of_n_addr_cells(struct device_node *np);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 237 : extern int of_n_size_cells(struct device_node *np);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 239 : 	const struct of_device_id *matches, const struct device_node *node);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 240 : extern int of_modalias_node(struct device_node *node, char *modalias, int len);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 242 : extern struct device_node *of_parse_phandle(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 245 : extern int of_parse_phandle_with_args(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 248 : extern int of_parse_phandle_with_fixed_args(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 251 : extern int of_count_phandle_with_args(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 255 : extern int of_alias_get_id(struct device_node *np, const char *stem);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 259 : extern int of_add_property(struct device_node *np, struct property *prop);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 260 : extern int of_remove_property(struct device_node *np, struct property *prop);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 261 : extern int of_update_property(struct device_node *np, struct property *newprop);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 271 : 	struct device_node	*dn;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 279 : extern int of_attach_node(struct device_node *);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 280 : extern int of_detach_node(struct device_node *);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 303 : int of_device_is_stdout_path(struct device_node *dn);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 307 : static inline const char* of_node_full_name(struct device_node *np)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 312 : static inline struct device_node *of_find_node_by_name(struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 318 : static inline struct device_node *of_find_node_by_type(struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 324 : static inline struct device_node *of_find_matching_node_and_match(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 325 : 	struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 332 : static inline struct device_node *of_get_parent(const struct device_node *node)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 337 : static inline struct device_node *of_get_next_child(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 338 : 	const struct device_node *node, struct device_node *prev)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 343 : static inline struct device_node *of_get_next_available_child(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 344 : 	const struct device_node *node, struct device_node *prev)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 349 : static inline struct device_node *of_find_node_with_property(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 350 : 	struct device_node *from, const char *prop_name)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 360 : static inline struct device_node *of_get_child_by_name(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 361 : 					const struct device_node *node,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 367 : static inline int of_device_is_compatible(const struct device_node *device,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 373 : static inline int of_device_is_available(const struct device_node *device)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 378 : static inline struct property *of_find_property(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 385 : static inline struct device_node *of_find_compatible_node(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 386 : 						struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 393 : static inline int of_property_read_u32_index(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 399 : static inline int of_property_read_u8_array(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 405 : static inline int of_property_read_u16_array(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 411 : static inline int of_property_read_u32_array(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 418 : static inline int of_property_read_string(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 425 : static inline int of_property_read_string_index(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 432 : static inline int of_property_count_strings(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 438 : static inline const void *of_get_property(const struct device_node *node,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 445 : static inline struct device_node *of_get_cpu_node(int cpu,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 451 : static inline int of_property_read_u64(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 457 : static inline int of_property_match_string(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 464 : static inline struct device_node *of_parse_phandle(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 471 : static inline int of_parse_phandle_with_args(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 480 : static inline int of_parse_phandle_with_fixed_args(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 487 : static inline int of_count_phandle_with_args(struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 494 : static inline int of_alias_get_id(struct device_node *np, const char *stem)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 504 : static inline int of_device_is_stdout_path(struct device_node *dn)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 526 : extern int of_node_to_nid(struct device_node *np);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 528 : static inline int of_node_to_nid(struct device_node *device) { return 0; }
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 531 : static inline struct device_node *of_find_matching_node(
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 532 : 	struct device_node *from,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 546 : static inline bool of_property_read_bool(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 554 : static inline int of_property_read_u8(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 561 : static inline int of_property_read_u16(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 568 : static inline int of_property_read_u32(const struct device_node *np,
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 614 : static inline int of_get_child_count(const struct device_node *np)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 616 : 	struct device_node *child;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 625 : static inline int of_get_available_child_count(const struct device_node *np)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 627 : 	struct device_node *child;
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 637 : extern void proc_device_tree_add_node(struct device_node *, struct proc_dir_entry *);
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 8 : 	struct device_node *node;
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : 					    struct device_node *np,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : extern u64 of_translate_dma_address(struct device_node *dev,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : extern u64 of_translate_address(struct device_node *np, const __be32 *addr);
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : extern bool of_can_translate_address(struct device_node *dev);
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : extern int of_address_to_resource(struct device_node *dev, int index,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : extern struct device_node *of_find_matching_node_by_address(
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : 					struct device_node *from,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : extern void __iomem *of_iomap(struct device_node *device, int index);
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : extern const __be32 *of_get_address(struct device_node *dev, int index,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 62 : 			struct device_node *node);
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : static inline struct device_node *of_find_matching_node_by_address(
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : 					struct device_node *from,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 75 : static inline const __be32 *of_get_address(struct device_node *dev, int index,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : 			struct device_node *node)
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 96 : extern int of_address_to_resource(struct device_node *dev, int index,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 98 : void __iomem *of_iomap(struct device_node *node, int index);
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 100 : static inline int of_address_to_resource(struct device_node *dev, int index,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 106 : static inline void __iomem *of_iomap(struct device_node *device, int index)
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 113 : extern const __be32 *of_get_pci_address(struct device_node *dev, int bar_no,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 115 : extern int of_pci_address_to_resource(struct device_node *dev, int bar,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 118 : static inline int of_pci_address_to_resource(struct device_node *dev, int bar,
of_address.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 124 : static inline const __be32 *of_get_pci_address(struct device_node *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 11 : struct device;
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : 	const struct of_device_id *matches, const struct device *dev);
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : extern void of_device_make_bus_id(struct device *dev);
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : static inline int of_driver_match_device(struct device *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : 					 const struct device_driver *drv)
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 36 : extern ssize_t of_device_get_modalias(struct device *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 39 : extern void of_device_uevent(struct device *dev, struct kobj_uevent_env *env);
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : extern int of_device_uevent_modalias(struct device *dev, struct kobj_uevent_env *env);
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : static inline void of_device_node_put(struct device *dev)
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : static inline struct device_node *of_cpu_device_node_get(int cpu)
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : 	struct device *cpu_dev;
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 58 : static inline int of_driver_match_device(struct device *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : 					 struct device_driver *drv)
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : static inline void of_device_uevent(struct device *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : static inline int of_device_get_modalias(struct device *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 73 : static inline int of_device_uevent_modalias(struct device *dev,
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 79 : static inline void of_device_node_put(struct device *dev) { }
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : 		const struct of_device_id *matches, const struct device *dev)
of_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 89 : static inline struct device_node *of_cpu_device_node_get(int cpu)
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 19 : struct device_node;
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : 	struct device_node	*of_node;
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : extern int of_dma_controller_register(struct device_node *np,
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 39 : extern void of_dma_controller_free(struct device_node *np);
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : extern struct dma_chan *of_dma_request_slave_channel(struct device_node *np,
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : static inline int of_dma_controller_register(struct device_node *np,
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : static inline void of_dma_controller_free(struct device_node *np)
of_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : static inline struct dma_chan *of_dma_request_slave_channel(struct device_node *np,
of_fdt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 62 : struct device_node;
of_fdt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 76 : 			       struct device_node **mynodes);
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : struct device_node;
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : extern struct gpio_desc *of_get_named_gpiod_flags(struct device_node *np,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 54 : extern int of_mm_gpiochip_add(struct device_node *np,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : static inline struct gpio_desc *of_get_named_gpiod_flags(struct device_node *np,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 84 : static inline int of_get_named_gpio_flags(struct device_node *np,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 116 : static inline int of_gpio_named_count(struct device_node *np, const char* propname)
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 127 : static inline int of_gpio_count(struct device_node *np)
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 142 : static inline struct gpio_desc *of_get_gpiod_flags(struct device_node *np,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 148 : static inline int of_get_gpio_flags(struct device_node *np, int index,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 163 : static inline int of_get_named_gpio(struct device_node *np,
of_gpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 177 : static inline int of_get_gpio(struct device_node *np, int index)
of_iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 6 : extern int of_get_dma_window(struct device_node *dn, const char *prefix,
of_iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : static inline int of_get_dma_window(struct device_node *dn, const char *prefix,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 11 : typedef int (*of_irq_init_cb_t)(struct device_node *, struct device_node *);
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : extern struct device_node *of_irq_dflt_pic;
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : extern int of_irq_parse_oldworld(struct device_node *device, int index,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : static inline int of_irq_parse_oldworld(struct device_node *device, int index,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : extern int of_irq_parse_one(struct device_node *device, int index,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : extern int of_irq_to_resource(struct device_node *dev, int index,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : extern int of_irq_to_resource_table(struct device_node *dev,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : extern int of_irq_count(struct device_node *dev);
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 48 : static inline int of_irq_count(struct device_node *dev)
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : extern unsigned int irq_of_parse_and_map(struct device_node *node, int index);
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : extern struct device_node *of_irq_find_parent(struct device_node *child);
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : static inline unsigned int irq_of_parse_and_map(struct device_node *dev,
of_irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 70 : static inline void *of_irq_find_parent(struct device_node *child)
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : extern int of_mdiobus_register(struct mii_bus *mdio, struct device_node *np);
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : extern struct phy_device *of_phy_find_device(struct device_node *phy_np);
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 19 : 					 struct device_node *phy_np,
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : 				 struct device_node *phy_np, u32 flags,
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 29 : extern struct mii_bus *of_mdio_find_bus(struct device_node *mdio_np);
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 32 : static inline int of_mdiobus_register(struct mii_bus *mdio, struct device_node *np)
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : static inline struct phy_device *of_phy_find_device(struct device_node *phy_np)
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : 						struct device_node *phy_np,
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : 					       struct device_node *phy_np,
of_mdio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : static inline struct mii_bus *of_mdio_find_bus(struct device_node *mdio_np)
of_mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : int of_get_nand_ecc_mode(struct device_node *np);
of_mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : int of_get_nand_bus_width(struct device_node *np);
of_mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : bool of_get_nand_on_flash_bbt(struct device_node *np);
of_mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : static inline int of_get_nand_ecc_mode(struct device_node *np)
of_mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : static inline int of_get_nand_bus_width(struct device_node *np)
of_mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : static inline bool of_get_nand_on_flash_bbt(struct device_node *np)
of_net.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : extern int of_get_phy_mode(struct device_node *np);
of_net.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 13 : extern const void *of_get_mac_address(struct device_node *np);
of_net.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : static inline int of_get_phy_mode(struct device_node *np)
of_net.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : static inline const void *of_get_mac_address(struct device_node *np)
of_pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : struct device_node;
of_pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 13 : struct device_node *of_pci_find_child_device(struct device_node *parent,
of_pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : int of_pci_get_devfn(struct device_node *np);
of_pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : int of_pci_parse_bus_range(struct device_node *node, struct resource *res);
of_pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct msi_chip *of_pci_find_msi_chip_by_node(struct device_node *of_node);
of_pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : of_pci_find_msi_chip_by_node(struct device_node *of_node) { return NULL; }
of_pdt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : extern void (*of_pdt_build_more)(struct device_node *dp,
of_pdt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : 		struct device_node ***nextp);
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : extern struct platform_device *of_device_alloc(struct device_node *np,
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : 					 struct device *parent);
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : extern struct platform_device *of_find_device_by_node(struct device_node *np);
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : extern struct platform_device *of_platform_device_create(struct device_node *np,
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : 						   struct device *parent);
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : extern int of_platform_bus_probe(struct device_node *root,
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 69 : 				 struct device *parent);
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 71 : extern int of_platform_populate(struct device_node *root,
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 74 : 				struct device *parent);
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 76 : static inline int of_platform_populate(struct device_node *root,
of_platform.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 79 : 					struct device *parent)
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : extern struct iovm_struct *omap_find_iovm_area(struct device *dev, u32 da);
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : omap_iommu_vmap(struct iommu_domain *domain, struct device *dev, u32 da,
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : 				struct device *dev, u32 da);
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : omap_iommu_vmalloc(struct iommu_domain *domain, struct device *dev,
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : omap_iommu_vfree(struct iommu_domain *domain, struct device *dev,
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : extern void *omap_da_to_va(struct device *dev, u32 da);
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : extern void omap_iommu_save_ctx(struct device *dev);
omap-iommu.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : extern void omap_iommu_restore_ctx(struct device *dev);
parport.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 194 : 	struct device *dev;	/* Physical device associated with IO/DMA.
parport_pc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 234 : 					     struct device *dev,
pch_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : 	struct device		*dma_dev;
pci-acpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : 	struct device *dev;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 278 : 	struct device_dma_parameters dma_parms;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 395 : 	struct device dev;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 457 : 	struct device		*bridge;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 458 : 	struct device		dev;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 625 : 	struct device_driver	driver;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 744 : struct pci_bus *pci_scan_bus_parented(struct device *parent, int bus,
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 747 : struct pci_bus *pci_create_root_bus(struct device *parent, int bus,
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 753 : struct pci_bus *pci_scan_root_bus(struct device *parent, int bus,
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1765 : struct device_node;
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1772 : struct device_node *pcibios_get_phb_of_node(struct pci_bus *bus);
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1774 : static inline struct device_node *
pci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1780 : static inline struct device_node *pci_bus_to_OF_node(struct pci_bus *bus)
pcieport_if.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : 	struct device	device;     /* Generic Device Interface */
pcieport_if.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : 	struct device_driver driver;
pda_power.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 19 : struct device;
pda_power.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : 	int (*init)(struct device *dev);
pda_power.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : 	void (*exit)(struct device *dev);
perf_event.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 175 : 	struct device			*dev;
perf_event.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 851 : 	struct device_attribute attr;
perf_event.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 864 : _name##_show(struct device *dev,					\
perf_event.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 865 : 			       struct device_attribute *attr,		\
perf_event.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 872 : static struct device_attribute format_attr_##_name = __ATTR_RO(_name)
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 100 : struct device;
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : 	struct device *parent;
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 128 : 	struct device dev;
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 304 : 	struct device dev;
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 475 : 	struct device_driver driver;
pktcdvd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 197 : 	struct device		*dev;		/* sysfs pktcdvd[0-7] dev */
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 26 : 	struct device	dev;
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : extern struct device platform_bus;
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : 		struct device *parent;
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : 		struct device *parent, const char *name, int id,
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : 		struct device *parent, const char *name, int id,
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 179 : 	struct device_driver driver;
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 298 : extern int platform_pm_suspend(struct device *dev);
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 299 : extern int platform_pm_resume(struct device *dev);
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 306 : extern int platform_pm_freeze(struct device *dev);
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 307 : extern int platform_pm_thaw(struct device *dev);
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 308 : extern int platform_pm_poweroff(struct device *dev);
platform_device.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 309 : extern int platform_pm_restore(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : struct device; /* we have a circular dep with device.h */
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 39 : extern void pm_vt_switch_required(struct device *dev, bool required);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : extern void pm_vt_switch_unregister(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : static inline void pm_vt_switch_required(struct device *dev, bool required)
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : static inline void pm_vt_switch_unregister(struct device *dev)
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 54 : struct device;
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 277 : 	int (*prepare)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 278 : 	void (*complete)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 279 : 	int (*suspend)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 280 : 	int (*resume)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 281 : 	int (*freeze)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 282 : 	int (*thaw)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 283 : 	int (*poweroff)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 284 : 	int (*restore)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 285 : 	int (*suspend_late)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 286 : 	int (*resume_early)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 287 : 	int (*freeze_late)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 288 : 	int (*thaw_early)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 289 : 	int (*poweroff_late)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 290 : 	int (*restore_early)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 291 : 	int (*suspend_noirq)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 292 : 	int (*resume_noirq)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 293 : 	int (*freeze_noirq)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 294 : 	int (*thaw_noirq)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 295 : 	int (*poweroff_noirq)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 296 : 	int (*restore_noirq)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 297 : 	int (*runtime_suspend)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 298 : 	int (*runtime_resume)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 299 : 	int (*runtime_idle)(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 525 : 	struct device *dev;
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 588 : extern void update_pm_runtime_accounting(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 589 : extern int dev_pm_get_subsys_data(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 590 : extern int dev_pm_put_subsys_data(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 675 : extern int device_pm_wait_for_dev(struct device *sub, struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 676 : extern void dpm_for_each_dev(void *data, void (*fn)(struct device *, void *));
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 678 : extern int pm_generic_prepare(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 679 : extern int pm_generic_suspend_late(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 680 : extern int pm_generic_suspend_noirq(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 681 : extern int pm_generic_suspend(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 682 : extern int pm_generic_resume_early(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 683 : extern int pm_generic_resume_noirq(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 684 : extern int pm_generic_resume(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 685 : extern int pm_generic_freeze_noirq(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 686 : extern int pm_generic_freeze_late(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 687 : extern int pm_generic_freeze(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 688 : extern int pm_generic_thaw_noirq(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 689 : extern int pm_generic_thaw_early(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 690 : extern int pm_generic_thaw(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 691 : extern int pm_generic_restore_noirq(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 692 : extern int pm_generic_restore_early(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 693 : extern int pm_generic_restore(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 694 : extern int pm_generic_poweroff_noirq(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 695 : extern int pm_generic_poweroff_late(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 696 : extern int pm_generic_poweroff(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 697 : extern void pm_generic_complete(struct device *dev);
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 711 : static inline int device_pm_wait_for_dev(struct device *a, struct device *b)
pm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 716 : static inline void dpm_for_each_dev(void *data, void (*fn)(struct device *, void *))
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : static inline bool pm_clk_no_clocks(struct device *dev)
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 28 : extern void pm_clk_init(struct device *dev);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 29 : extern int pm_clk_create(struct device *dev);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : extern void pm_clk_destroy(struct device *dev);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : extern int pm_clk_add(struct device *dev, const char *con_id);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 32 : extern void pm_clk_remove(struct device *dev, const char *con_id);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 33 : extern int pm_clk_suspend(struct device *dev);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : extern int pm_clk_resume(struct device *dev);
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 36 : static inline bool pm_clk_no_clocks(struct device *dev)
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : static inline void pm_clk_init(struct device *dev)
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : static inline int pm_clk_create(struct device *dev)
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : static inline void pm_clk_destroy(struct device *dev)
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : static inline int pm_clk_add(struct device *dev, const char *con_id)
pm_clock.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 54 : static inline void pm_clk_remove(struct device *dev, const char *con_id)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : 	bool (*stop_ok)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : 	int (*start)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : 	int (*stop)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 36 : 	int (*save_state)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : 	int (*restore_state)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : 	int (*suspend)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 39 : 	int (*suspend_late)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : 	int (*resume_early)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : 	int (*resume)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : 	int (*freeze)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : 	int (*freeze_late)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : 	int (*thaw_early)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : 	int (*thaw)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : 	bool (*active_wakeup)(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 83 : 	struct device_node *of_node; /* Node in device tree */
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 125 : static inline struct generic_pm_domain_data *dev_gpd_data(struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 132 : extern struct generic_pm_domain *dev_to_genpd(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 134 : 				 struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 137 : extern int __pm_genpd_of_add_device(struct device_node *genpd_node,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 138 : 				    struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 142 : 				      struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 146 : 				  struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 147 : extern void pm_genpd_dev_need_restore(struct device *dev, bool val);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 154 : extern int pm_genpd_add_callbacks(struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 157 : extern int __pm_genpd_remove_callbacks(struct device *dev, bool clear_td);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 168 : extern bool default_stop_ok(struct device *dev);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 173 : static inline struct generic_pm_domain_data *dev_gpd_data(struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 177 : static inline struct generic_pm_domain *dev_to_genpd(struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 182 : 					struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 187 : static inline int __pm_genpd_of_add_device(struct device_node *genpd_node,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 188 : 					   struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 194 : 					     struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 200 : 					 struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 204 : static inline void pm_genpd_dev_need_restore(struct device *dev, bool val) {}
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 220 : static inline int pm_genpd_add_callbacks(struct device *dev,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 226 : static inline int __pm_genpd_remove_callbacks(struct device *dev, bool clear_td)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 258 : static inline bool default_stop_ok(struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 267 : 				      struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 272 : static inline int pm_genpd_of_add_device(struct device_node *genpd_node,
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 273 : 					 struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 279 : 					   struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 284 : static inline int pm_genpd_remove_callbacks(struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 298 : extern void pm_genpd_syscore_switch(struct device *dev, bool suspend);
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 300 : static inline void pm_genpd_syscore_switch(struct device *dev, bool suspend) {}
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 303 : static inline void pm_genpd_syscore_poweroff(struct device *dev)
pm_domain.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 308 : static inline void pm_genpd_syscore_poweron(struct device *dev)
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : struct device;
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 34 : int dev_pm_opp_get_opp_count(struct device *dev);
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 36 : struct dev_pm_opp *dev_pm_opp_find_freq_exact(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : struct dev_pm_opp *dev_pm_opp_find_freq_floor(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : struct dev_pm_opp *dev_pm_opp_find_freq_ceil(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : int dev_pm_opp_add(struct device *dev, unsigned long freq,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : int dev_pm_opp_enable(struct device *dev, unsigned long freq);
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : int dev_pm_opp_disable(struct device *dev, unsigned long freq);
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : struct srcu_notifier_head *dev_pm_opp_get_notifier(struct device *dev);
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : static inline int dev_pm_opp_get_opp_count(struct device *dev)
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 70 : static inline struct dev_pm_opp *dev_pm_opp_find_freq_exact(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 76 : static inline struct dev_pm_opp *dev_pm_opp_find_freq_floor(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : static inline struct dev_pm_opp *dev_pm_opp_find_freq_ceil(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 88 : static inline int dev_pm_opp_add(struct device *dev, unsigned long freq,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 94 : static inline int dev_pm_opp_enable(struct device *dev, unsigned long freq)
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 99 : static inline int dev_pm_opp_disable(struct device *dev, unsigned long freq)
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 105 : 							struct device *dev)
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 112 : int of_init_opp_table(struct device *dev);
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 114 : static inline int of_init_opp_table(struct device *dev)
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : int dev_pm_opp_init_cpufreq_table(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 123 : void dev_pm_opp_free_cpufreq_table(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 126 : static inline int dev_pm_opp_init_cpufreq_table(struct device *dev,
pm_opp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 133 : void dev_pm_opp_free_cpufreq_table(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 62 : 	struct device *dev;
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 128 : enum pm_qos_flags_status __dev_pm_qos_flags(struct device *dev, s32 mask);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 129 : enum pm_qos_flags_status dev_pm_qos_flags(struct device *dev, s32 mask);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 130 : s32 __dev_pm_qos_read_value(struct device *dev);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 131 : s32 dev_pm_qos_read_value(struct device *dev);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 132 : int dev_pm_qos_add_request(struct device *dev, struct dev_pm_qos_request *req,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 136 : int dev_pm_qos_add_notifier(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 138 : int dev_pm_qos_remove_notifier(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 142 : void dev_pm_qos_constraints_init(struct device *dev);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 143 : void dev_pm_qos_constraints_destroy(struct device *dev);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 144 : int dev_pm_qos_add_ancestor_request(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 147 : static inline enum pm_qos_flags_status __dev_pm_qos_flags(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 150 : static inline enum pm_qos_flags_status dev_pm_qos_flags(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 153 : static inline s32 __dev_pm_qos_read_value(struct device *dev)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 155 : static inline s32 dev_pm_qos_read_value(struct device *dev)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 157 : static inline int dev_pm_qos_add_request(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 167 : static inline int dev_pm_qos_add_notifier(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 170 : static inline int dev_pm_qos_remove_notifier(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 179 : static inline void dev_pm_qos_constraints_init(struct device *dev)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 183 : static inline void dev_pm_qos_constraints_destroy(struct device *dev)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 187 : static inline int dev_pm_qos_add_ancestor_request(struct device *dev,
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 193 : int dev_pm_qos_expose_latency_limit(struct device *dev, s32 value);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 194 : void dev_pm_qos_hide_latency_limit(struct device *dev);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 195 : int dev_pm_qos_expose_flags(struct device *dev, s32 value);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 196 : void dev_pm_qos_hide_flags(struct device *dev);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 197 : int dev_pm_qos_update_flags(struct device *dev, s32 mask, bool set);
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 199 : static inline s32 dev_pm_qos_requested_latency(struct device *dev)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 204 : static inline s32 dev_pm_qos_requested_flags(struct device *dev)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 209 : static inline int dev_pm_qos_expose_latency_limit(struct device *dev, s32 value)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 211 : static inline void dev_pm_qos_hide_latency_limit(struct device *dev) {}
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 212 : static inline int dev_pm_qos_expose_flags(struct device *dev, s32 value)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 214 : static inline void dev_pm_qos_hide_flags(struct device *dev) {}
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 215 : static inline int dev_pm_qos_update_flags(struct device *dev, s32 m, bool set)
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 218 : static inline s32 dev_pm_qos_requested_latency(struct device *dev) { return 0; }
pm_qos.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 219 : static inline s32 dev_pm_qos_requested_flags(struct device *dev) { return 0; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : extern int pm_generic_runtime_suspend(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 28 : extern int pm_generic_runtime_resume(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 30 : static inline int pm_generic_runtime_suspend(struct device *dev) { return 0; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 31 : static inline int pm_generic_runtime_resume(struct device *dev) { return 0; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 38 : extern int __pm_runtime_idle(struct device *dev, int rpmflags);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 39 : extern int __pm_runtime_suspend(struct device *dev, int rpmflags);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : extern int __pm_runtime_resume(struct device *dev, int rpmflags);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 41 : extern int pm_schedule_suspend(struct device *dev, unsigned int delay);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : extern int __pm_runtime_set_status(struct device *dev, unsigned int status);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : extern int pm_runtime_barrier(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : extern void pm_runtime_enable(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 45 : extern void __pm_runtime_disable(struct device *dev, bool check_resume);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : extern void pm_runtime_allow(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : extern void pm_runtime_forbid(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 48 : extern void pm_runtime_no_callbacks(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 49 : extern void pm_runtime_irq_safe(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 50 : extern void __pm_runtime_use_autosuspend(struct device *dev, bool use);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : extern void pm_runtime_set_autosuspend_delay(struct device *dev, int delay);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 52 : extern unsigned long pm_runtime_autosuspend_expiration(struct device *dev);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 53 : extern void pm_runtime_update_max_time_suspended(struct device *dev,
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 55 : extern void pm_runtime_set_memalloc_noio(struct device *dev, bool enable);
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : static inline bool pm_children_suspended(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : static inline void pm_runtime_get_noresume(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : static inline void pm_runtime_put_noidle(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 73 : static inline bool device_run_wake(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 78 : static inline void device_set_run_wake(struct device *dev, bool enable)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 83 : static inline bool pm_runtime_suspended(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 89 : static inline bool pm_runtime_active(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 95 : static inline bool pm_runtime_status_suspended(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 100 : static inline bool pm_runtime_enabled(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 105 : static inline bool pm_runtime_callbacks_present(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 110 : static inline void pm_runtime_mark_last_busy(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 117 : static inline int __pm_runtime_idle(struct device *dev, int rpmflags)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : static inline int __pm_runtime_suspend(struct device *dev, int rpmflags)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 125 : static inline int __pm_runtime_resume(struct device *dev, int rpmflags)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 129 : static inline int pm_schedule_suspend(struct device *dev, unsigned int delay)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 133 : static inline int __pm_runtime_set_status(struct device *dev,
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 135 : static inline int pm_runtime_barrier(struct device *dev) { return 0; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 136 : static inline void pm_runtime_enable(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 137 : static inline void __pm_runtime_disable(struct device *dev, bool c) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 138 : static inline void pm_runtime_allow(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 139 : static inline void pm_runtime_forbid(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 141 : static inline bool pm_children_suspended(struct device *dev) { return false; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 142 : static inline void pm_runtime_get_noresume(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 143 : static inline void pm_runtime_put_noidle(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 144 : static inline bool device_run_wake(struct device *dev) { return false; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 145 : static inline void device_set_run_wake(struct device *dev, bool enable) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 146 : static inline bool pm_runtime_suspended(struct device *dev) { return false; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 147 : static inline bool pm_runtime_active(struct device *dev) { return true; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 148 : static inline bool pm_runtime_status_suspended(struct device *dev) { return false; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 149 : static inline bool pm_runtime_enabled(struct device *dev) { return false; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 151 : static inline void pm_runtime_no_callbacks(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 152 : static inline void pm_runtime_irq_safe(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 154 : static inline bool pm_runtime_callbacks_present(struct device *dev) { return false; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 155 : static inline void pm_runtime_mark_last_busy(struct device *dev) {}
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : static inline void __pm_runtime_use_autosuspend(struct device *dev,
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 158 : static inline void pm_runtime_set_autosuspend_delay(struct device *dev,
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 161 : 				struct device *dev) { return 0; }
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 162 : static inline void pm_runtime_set_memalloc_noio(struct device *dev,
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 167 : static inline int pm_runtime_idle(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 172 : static inline int pm_runtime_suspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 177 : static inline int pm_runtime_autosuspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 182 : static inline int pm_runtime_resume(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 187 : static inline int pm_request_idle(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 192 : static inline int pm_request_resume(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 197 : static inline int pm_request_autosuspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 202 : static inline int pm_runtime_get(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 207 : static inline int pm_runtime_get_sync(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 212 : static inline int pm_runtime_put(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 217 : static inline int pm_runtime_put_autosuspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 223 : static inline int pm_runtime_put_sync(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 228 : static inline int pm_runtime_put_sync_suspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 233 : static inline int pm_runtime_put_sync_autosuspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 238 : static inline int pm_runtime_set_active(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 243 : static inline void pm_runtime_set_suspended(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 248 : static inline void pm_runtime_disable(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 253 : static inline void pm_runtime_use_autosuspend(struct device *dev)
pm_runtime.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 258 : static inline void pm_runtime_dont_use_autosuspend(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 72 : static inline bool device_can_wakeup(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 77 : static inline bool device_may_wakeup(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : extern int device_wakeup_enable(struct device *dev);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 92 : extern int device_wakeup_disable(struct device *dev);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 93 : extern void device_set_wakeup_capable(struct device *dev, bool capable);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 94 : extern int device_init_wakeup(struct device *dev, bool val);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 95 : extern int device_set_wakeup_enable(struct device *dev, bool enable);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 97 : extern void pm_stay_awake(struct device *dev);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 99 : extern void pm_relax(struct device *dev);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 101 : extern void pm_wakeup_event(struct device *dev, unsigned int msec);
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 105 : static inline void device_set_wakeup_capable(struct device *dev, bool capable)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 110 : static inline bool device_can_wakeup(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 138 : static inline int device_wakeup_enable(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 144 : static inline int device_wakeup_disable(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 150 : static inline int device_set_wakeup_enable(struct device *dev, bool enable)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 156 : static inline int device_init_wakeup(struct device *dev, bool val)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 163 : static inline bool device_may_wakeup(struct device *dev)
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 170 : static inline void pm_stay_awake(struct device *dev) {}
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 174 : static inline void pm_relax(struct device *dev) {}
pm_wakeup.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 178 : static inline void pm_wakeup_event(struct device *dev, unsigned int msec) {}
pnp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 201 : 	struct device dev;		/* Driver Model device interface */
pnp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 244 : 	struct device dev;		/* Driver Model device interface */
pnp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 379 : 	struct device_driver driver;
pnp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 423 : 	struct device dev;	/* link to driver model */
powercap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 78 : 	struct device dev;
powercap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 154 : 	struct device dev;
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : struct device;
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 171 : struct device_node;
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 184 : 	struct device_node *of_node;
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 201 : 	struct device *dev;
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 248 : extern struct power_supply *power_supply_get_by_phandle(struct device_node *np,
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 252 : power_supply_get_by_phandle(struct device_node *np, const char *property)
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 265 : extern int power_supply_register(struct device *parent,
power_supply.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 268 : extern int power_supply_powers(struct power_supply *psy, struct device *dev);
pps_kernel.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 : 	struct device *dev;		/* Parent device for device_create */
pps_kernel.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 74 : 	struct device *dev;
ptp_clock_kernel.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 105 : 					    struct device *parent);
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 167 : 	struct device		*dev;
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 194 : struct pwm_device *pwm_get(struct device *dev, const char *con_id);
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 195 : struct pwm_device *of_pwm_get(struct device_node *np, const char *con_id);
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 198 : struct pwm_device *devm_pwm_get(struct device *dev, const char *con_id);
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 199 : struct pwm_device *devm_of_pwm_get(struct device *dev, struct device_node *np,
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 201 : void devm_pwm_put(struct device *dev, struct pwm_device *pwm);
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 232 : static inline struct pwm_device *pwm_get(struct device *dev,
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 238 : static inline struct pwm_device *of_pwm_get(struct device_node *np,
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 248 : static inline struct pwm_device *devm_pwm_get(struct device *dev,
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 254 : static inline struct pwm_device *devm_of_pwm_get(struct device *dev,
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 255 : 						 struct device_node *np,
pwm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 261 : static inline void devm_pwm_put(struct device *dev, struct pwm_device *pwm)
pwm_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : 	int (*init)(struct device *dev);
pwm_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : 	int (*notify)(struct device *dev, int brightness);
pwm_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : 	void (*notify_after)(struct device *dev, int brightness);
pwm_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : 	void (*exit)(struct device *dev);
pwm_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : 	int (*check_fb)(struct device *dev, struct fb_info *info);
pxa2xx_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 196 : 	struct device_node	*of_node;
pxa2xx_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 225 : struct ssp_device *pxa_ssp_request_of(const struct device_node *of_node,
pxa2xx_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 232 : static inline struct ssp_device *pxa_ssp_request_of(const struct device_node *n,
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : 	int (*is_raid)(struct device *);
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : 	void (*get_resync)(struct device *);
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : 	void (*get_state)(struct device *);
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : raid_set_##attr(struct raid_template *r, struct device *dev, type value) {    \
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : 	struct device *device =						      \
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : raid_get_##attr(struct raid_template *r, struct device *dev) {		      \
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : 	struct device *device =						      \
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 81 : int __must_check raid_component_add(struct raid_template *, struct device *,
raid_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : 				    struct device *);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : struct device;
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 190 : 	bool (*writeable_reg)(struct device *dev, unsigned int reg);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 191 : 	bool (*readable_reg)(struct device *dev, unsigned int reg);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 192 : 	bool (*volatile_reg)(struct device *dev, unsigned int reg);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 193 : 	bool (*precious_reg)(struct device *dev, unsigned int reg);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 316 : struct regmap *regmap_init(struct device *dev,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 326 : struct regmap *regmap_init_mmio_clk(struct device *dev, const char *clk_id,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 330 : struct regmap *devm_regmap_init(struct device *dev,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 340 : struct regmap *devm_regmap_init_mmio_clk(struct device *dev, const char *clk_id,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 354 : static inline struct regmap *regmap_init_mmio(struct device *dev,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 372 : static inline struct regmap *devm_regmap_init_mmio(struct device *dev,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 382 : struct regmap *dev_get_regmap(struct device *dev, const char *name);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 464 : struct regmap_field *devm_regmap_field_alloc(struct device *dev,
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 466 : void devm_regmap_field_free(struct device *dev,	struct regmap_field *field);
regmap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 698 : static inline struct regmap *dev_get_regmap(struct device *dev,
remoteproc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 415 : 	struct device dev;
remoteproc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 482 : struct rproc *rproc_alloc(struct device *dev, const char *name,
reset-controller.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : struct device_node;
reset-controller.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : 	struct device_node *of_node;
reset.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 4 : struct device;
reset.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 11 : struct reset_control *reset_control_get(struct device *dev, const char *id);
reset.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 13 : struct reset_control *devm_reset_control_get(struct device *dev, const char *id);
reset.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : int device_reset(struct device *dev);
resume-trace.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 15 : struct device;
resume-trace.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 16 : extern void set_trace_device(struct device *);
rfkill.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 39 : struct device;
rfkill.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 80 : 					  struct device *parent,
rfkill.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 218 : 	     struct device *parent,
rio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 86 : extern struct device rio_bus;
rio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 191 : 	struct device dev;	/* LDM device structure */
rio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 393 : 	struct device_driver driver;
rpmsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 112 : 	struct device dev;
rpmsg.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 163 : 	struct device_driver drv;
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 55 : 	int (*open)(struct device *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 56 : 	void (*release)(struct device *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 57 : 	int (*ioctl)(struct device *, unsigned int, unsigned long);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 58 : 	int (*read_time)(struct device *, struct rtc_time *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 59 : 	int (*set_time)(struct device *, struct rtc_time *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 : 	int (*read_alarm)(struct device *, struct rtc_wkalrm *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 61 : 	int (*set_alarm)(struct device *, struct rtc_wkalrm *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 62 : 	int (*proc)(struct device *, struct seq_file *);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : 	int (*set_mmss)(struct device *, unsigned long secs);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : 	int (*read_callback)(struct device *, int data);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : 	int (*alarm_irq_enable)(struct device *, unsigned int enabled);
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 88 : 	struct device dev;
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 133 : 					struct device *dev,
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 136 : extern struct rtc_device *devm_rtc_device_register(struct device *dev,
rtc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 141 : extern void devm_rtc_device_unregister(struct device *dev,
serial_core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : struct device;
serial_core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 197 : 	struct device		*dev;			/* parent device */
serial_sci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 84 : struct device;
serio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : 	struct device dev;
serio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : 	struct device_driver driver;
shdma-base.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 37 : struct device;
shdma-base.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 64 : 	struct device *dev;		/* Channel device */
shdma-base.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 123 : int shdma_init(struct device *dev, struct shdma_dev *sdev,
sh_dma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : struct device;
skbuff.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 2164 : static inline dma_addr_t skb_frag_dma_map(struct device *dev,
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : extern int sm501_unit_power(struct device *dev,
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : extern unsigned long sm501_set_clock(struct device *dev,
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 27 : extern unsigned long sm501_find_clock(struct device *dev,
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : extern int sm501_misc_control(struct device *dev,
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 44 : extern unsigned long sm501_modify_reg(struct device *dev,
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 169 : 	int	(*get_power)(struct device *dev);
sm501.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 170 : 	int	(*set_power)(struct device *dev, unsigned int on);
sound.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 10 : struct device;
sound.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : extern int register_sound_special_device(const struct file_operations *fops, int unit, struct device *dev);
ssbi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : int ssbi_write(struct device *dev, u16 addr, const u8 *buf, int len);
ssbi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : int ssbi_read(struct device *dev, u16 addr, u8 *buf, int len);
stmp3xxx_rtc_wdt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 12 : 	void (*wdt_set_timeout)(struct device *dev, u32 timeout);
sunserialcore.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 32 : extern int sunserial_console_match(struct console *, struct device_node *,
sunserialcore.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : 				      struct device_node *);
superhyway.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 54 : 	struct device_driver drv;
superhyway.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : 	struct device dev;
superhyway.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 104 : extern struct device_attribute superhyway_dev_attrs[];
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 6 : struct device;
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 42 : extern phys_addr_t swiotlb_tbl_map_single(struct device *hwdev,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : extern void swiotlb_tbl_unmap_single(struct device *hwdev,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 51 : extern void swiotlb_tbl_sync_single(struct device *hwdev,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 58 : *swiotlb_alloc_coherent(struct device *hwdev, size_t size,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 62 : swiotlb_free_coherent(struct device *hwdev, size_t size,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : extern dma_addr_t swiotlb_map_page(struct device *dev, struct page *page,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 69 : extern void swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 74 : swiotlb_map_sg(struct device *hwdev, struct scatterlist *sg, int nents,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 78 : swiotlb_unmap_sg(struct device *hwdev, struct scatterlist *sg, int nents,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl, int nelems,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 86 : swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 95 : swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 99 : swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 103 : swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 107 : swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr);
swiotlb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 110 : swiotlb_dma_supported(struct device *hwdev, u64 mask);
sys_soc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 32 :  * soc_device_to_device - helper function to fetch struct device
sys_soc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : struct device *soc_device_to_device(struct soc_device *soc);
tc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : 	struct device	dev;
tc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 85 : 	struct device	dev;		/* Generic device interface. */
tc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 107 : 	struct device_driver driver;
tegra-ahb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 17 : extern int tegra_ahb_enable_smmu(struct device_node *ahb);
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 146 : 	struct device device;
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 147 : 	struct device_node *np;
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 157 : 	struct device_attribute attr;
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 164 : 	struct device device;
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 249 : thermal_zone_of_sensor_register(struct device *dev, int id,
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 252 : void thermal_zone_of_sensor_unregister(struct device *dev,
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 256 : thermal_zone_of_sensor_register(struct device *dev, int id,
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 264 : void thermal_zone_of_sensor_unregister(struct device *dev,
thermal.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 285 : thermal_of_cooling_device_register(struct device_node *np, char *, void *,
tifm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 100 : 	struct device dev;
tifm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 111 : 	struct device_driver  driver;
tifm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 124 : 	struct device	    dev;
tifm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 135 : 					struct device *dev);
tifm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 140 : void tifm_free_device(struct device *dev);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 20 : 	int (*setup)(struct transport_container *, struct device *,
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 21 : 		     struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 22 : 	int (*configure)(struct transport_container *, struct device *,
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 23 : 			 struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 24 : 	int (*remove)(struct transport_container *, struct device *,
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 25 : 		      struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 65 : void transport_remove_device(struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : void transport_add_device(struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : void transport_setup_device(struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 68 : void transport_configure_device(struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 69 : void transport_destroy_device(struct device *);
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 72 : transport_register_device(struct device *dev)
transport_class.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 79 : transport_unregister_device(struct device *dev)
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 164 : struct device;
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 240 : 	struct device *dev;
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 404 : extern struct device *tty_register_device(struct tty_driver *driver,
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 405 : 					  unsigned index, struct device *dev);
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 406 : extern struct device *tty_register_device_attr(struct tty_driver *driver,
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 407 : 				unsigned index, struct device *device,
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 507 : extern struct device *tty_port_register_device(struct tty_port *port,
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 509 : 		struct device *device);
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 510 : extern struct device *tty_port_register_device_attr(struct tty_port *port,
tty.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 512 : 		struct device *device, void *drvdata,
ucb1400.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 90 : 	int			(*gpio_setup)(struct device *dev, int ngpio);
ucb1400.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : 	int			(*gpio_teardown)(struct device *dev, int ngpio);
ucb1400.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 111 : 	int	(*gpio_setup)(struct device *dev, int ngpio);
ucb1400.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 112 : 	int	(*gpio_teardown)(struct device *dev, int ngpio);
uio_driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 102 : 			      struct device *parent,
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 18 : #include <linux/device.h>	/* for struct device */
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 185 : 	struct device dev;		/* interface specific device info */
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 186 : 	struct device *usb_dev;
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 324 : 	struct device *controller;	/* host/master side hardware */
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 526 : 	struct device dev;
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 969 : 				struct device_driver *driver,
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 980 : 	struct device_driver driver;
usb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 1126 : 	char *(*devnode)(struct device *dev, umode_t *mode);
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 63 : 	struct device dev;
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 456 : 	struct device *device;
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 503 : typedef int (*uwb_dev_for_each_f)(struct device *dev, void *priv);
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 508 : struct uwb_rc *uwb_rc_get_by_grandpa(const struct device *);
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 532 : int __uwb_mac_addr_assigned_check(struct device *, void *);
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 533 : int __uwb_dev_addr_assigned_check(struct device *, void *);
uwb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 595 : int uwb_rc_add(struct uwb_rc *, struct device *dev, void *rc_priv);
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 72 : 	void *(*func_get)(struct device *dev, struct device_node *node);
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 80 : 		struct device_node *node,
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : struct vexpress_config_func *__vexpress_config_func_get(struct device *dev,
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 92 : 		struct device_node *node);
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 114 : unsigned __vexpress_get_site(struct device *dev, struct device_node *node);
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : struct clk *vexpress_osc_setup(struct device *dev);
vexpress.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 122 : void vexpress_osc_of_setup(struct device_node *node);
vfio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 43 : extern int vfio_add_group_dev(struct device *dev,
vfio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 47 : extern void *vfio_del_group_dev(struct device *dev);
vfio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 48 : extern struct vfio_device *vfio_device_get_from_dev(struct device *dev);
vga_switcheroo.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 66 : int vga_switcheroo_init_domain_pm_ops(struct device *dev, struct dev_pm_domain *domain);
vga_switcheroo.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 67 : int vga_switcheroo_init_domain_pm_optimus_hdmi_audio(struct device *dev, struct dev_pm_domain *domain);
vga_switcheroo.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 84 : static inline int vga_switcheroo_init_domain_pm_ops(struct device *dev, struct dev_pm_domain *domain) { return -EINVAL; }
vga_switcheroo.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 85 : static inline int vga_switcheroo_init_domain_pm_optimus_hdmi_audio(struct device *dev, struct dev_pm_domain *domain) { return -EINVAL; }
video_output.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 35 : 	struct device dev;
video_output.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 40 : 	struct device *dev,
video_output.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 46 :         struct device *dev,
virtio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 91 : 	struct device dev;
virtio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 101 : static inline struct virtio_device *dev_to_virtio(struct device *_dev)
virtio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 121 : 	struct device_driver driver;
virtio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 135 : static inline struct virtio_driver *drv_to_virtio(struct device_driver *drv)
vlynq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 74 : 	struct device dev;
vlynq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : 	struct device_driver driver;
vlynq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 90 : static inline struct vlynq_driver *to_vlynq_driver(struct device_driver *drv)
vlynq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 95 : static inline struct vlynq_device *to_vlynq_device(struct device *device)
vme.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 102 : 	struct device dev;
vme.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 114 : 	struct device_driver driver;
watchdog.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 81 : 	struct device *dev;
watchdog.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 82 : 	struct device *parent;
watchdog.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 141 : 				  unsigned int timeout_parm, struct device *dev);
wm97xx.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 273 : 	struct device *dev;		/* ALSA device */
zorro.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 33 :     struct device dev;			/* Generic device interface */
zorro.h (D:\Virtual Machines\Shared\linux-3.14\include\linux) line 60 :     struct device_driver driver;
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 30 : 	struct device		dev;
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 38 : 	struct device_driver	drv;
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 65 : struct amba_device *amba_apb_device_add(struct device *parent, const char *name,
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 69 : struct amba_device *amba_ahb_device_add(struct device *parent, const char *name,
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 74 : amba_apb_device_add_res(struct device *parent, const char *name,
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 79 : amba_ahb_device_add_res(struct device *parent, const char *name,
bus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 84 : struct amba_device *amba_find_device(const char *, struct device *, unsigned int, unsigned int);
mmci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 65 : 	int (*ios_handler)(struct device *, struct mmc_ios *);
mmci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\amba) line 66 : 	unsigned int (*status)(struct device *);
bcma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\bcma) line 256 : 	struct device dev;
bcma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\bcma) line 257 : 	struct device *dma_dev;
bcma.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\bcma) line 295 : 	struct device_driver drv;
ti.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\clk) line 197 : typedef void (*ti_of_clk_init_cb_t)(struct clk_hw *, struct device_node *);
ti.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\clk) line 263 : void __iomem *ti_clk_get_reg_addr(struct device_node *node, int index);
ti.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\clk) line 265 : void ti_dt_clk_init_provider(struct device_node *np, int index);
ti.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\clk) line 267 : int ti_clk_retry_init(struct device_node *node, struct clk_hw *hw,
ti.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\clk) line 269 : int of_ti_clk_autoidle_setup(struct device_node *node);
ti.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\clk) line 270 : int ti_clk_add_component(struct device_node *node, struct clk_hw *hw, int type);
of_extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\extcon) line 23 : 	*of_extcon_get_extcon_dev(struct device *dev, int index);
of_extcon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\extcon) line 26 : 	*of_extcon_get_extcon_dev(struct device *dev, int index)
bestcomm_priv.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\fsl\bestcomm) line 69 : 	struct device_node		*ofnode;
sram.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\fsl\bestcomm) line 36 : extern int  bcom_sram_init(struct device_node *sram_node, char *owner);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 7 : struct device;
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 22 : struct gpio_desc *__must_check gpiod_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 24 : struct gpio_desc *__must_check gpiod_get_index(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 29 : struct gpio_desc *__must_check devm_gpiod_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 31 : struct gpio_desc *__must_check devm_gpiod_get_index(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 34 : void devm_gpiod_put(struct device *dev, struct gpio_desc *desc);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 66 : static inline struct gpio_desc *__must_check gpiod_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 71 : static inline struct gpio_desc *__must_check gpiod_get_index(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 85 : static inline struct gpio_desc *__must_check devm_gpiod_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 91 : struct gpio_desc *__must_check devm_gpiod_get_index(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 97 : static inline void devm_gpiod_put(struct device *dev, struct gpio_desc *desc)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 223 : int gpiod_export_link(struct device *dev, const char *name,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 236 : static inline int gpiod_export_link(struct device *dev, const char *name,
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 7 : struct device;
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 10 : struct device_node;
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 64 : 	struct device		*dev;
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\gpio) line 103 : 	struct device_node *of_node;
hsi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\hsi) line 129 : 	struct device		device;
hsi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\hsi) line 159 : 	struct device_driver	driver;
hsi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\hsi) line 224 : 	struct device			device;
hsi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\hsi) line 272 : 	struct device		device;
tsc2007.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 15 : 	int	(*get_pendown_state)(struct device *);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 218 : int twl6030_mmc_card_detect(struct device *dev, int slot);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 220 : static inline int twl6030_mmc_card_detect(struct device *dev, int slot)
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 591 : 	int		(*setup)(struct device *dev,
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 593 : 	int		(*teardown)(struct device *dev,
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 624 : 	int		(*phy_init)(struct device *dev);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 625 : 	int		(*phy_exit)(struct device *dev);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 627 : 	int		(*phy_power)(struct device *dev, int iD, int on);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 629 : 	int		(*phy_set_clock)(struct device *dev, int on);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 631 : 	int		(*phy_suspend)(struct device *dev, int suspend);
twl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\i2c) line 767 : int twl4030_sih_setup(struct device *dev, int module, int irq_base);
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 181 : ssize_t iio_buffer_read_length(struct device *dev,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 182 : 			       struct device_attribute *attr,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 187 : ssize_t iio_buffer_write_length(struct device *dev,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 188 : 			      struct device_attribute *attr,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 194 : ssize_t iio_buffer_store_enable(struct device *dev,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 195 : 				struct device_attribute *attr,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 201 : ssize_t iio_buffer_show_enable(struct device *dev,
buffer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 202 : 			       struct device_attribute *attr,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 18 : struct device;
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 42 : struct iio_channel *iio_channel_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 60 : struct iio_channel *iio_channel_get_all(struct device *dev);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 79 : struct iio_cb_buffer *iio_channel_get_all_cb(struct device *dev,
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 431 : 	struct device			dev;
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 473 : int devm_iio_device_register(struct device *dev, struct iio_dev *indio_dev);
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 474 : void devm_iio_device_unregister(struct device *dev, struct iio_dev *indio_dev);
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 480 :  * iio_device_put() - reference counted deallocation of struct device
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 495 : static inline struct iio_dev *dev_to_iio_dev(struct device *dev)
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 552 : struct iio_dev *devm_iio_device_alloc(struct device *dev, int sizeof_priv);
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 553 : void devm_iio_device_free(struct device *dev, struct iio_dev *indio_dev);
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 554 : struct iio_trigger *devm_iio_trigger_alloc(struct device *dev,
iio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 556 : void devm_iio_trigger_free(struct device *dev, struct iio_trigger *iio_trig);
sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 24 : 	struct device_attribute dev_attr;
sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 33 : ssize_t iio_read_const_attr(struct device *dev,
sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 34 : 			    struct device_attribute *attr,
sysfs.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 45 : 	struct device_attribute dev_attr;
trigger.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 61 : 	struct device			dev;
trigger.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio) line 76 : static inline struct iio_trigger *to_iio_trigger(struct device *d)
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 162 : 				struct device *dev, u8 reg_addr, u8 *res_byte);
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 164 : 				struct device *dev, u8 reg_addr, u8 data);
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 166 : 		struct device *dev, u8 reg_addr, int len, u8 *data,
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 201 :  * @dev: Pointer to instance of struct device (I2C or SPI).
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 218 : 	struct device *dev;
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 284 : ssize_t st_sensors_sysfs_get_sampling_frequency(struct device *dev,
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 285 : 				struct device_attribute *attr, char *buf);
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 287 : ssize_t st_sensors_sysfs_set_sampling_frequency(struct device *dev,
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 288 : 		struct device_attribute *attr, const char *buf, size_t size);
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 290 : ssize_t st_sensors_sysfs_sampling_frequency_avail(struct device *dev,
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 291 : 				struct device_attribute *attr, char *buf);
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 293 : ssize_t st_sensors_sysfs_scale_avail(struct device *dev,
st_sensors.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\iio\common) line 294 : 				struct device_attribute *attr, char *buf);
ad714x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\input) line 6 :  * The platform_data for the device's "struct device" holds this
adxl34x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\input) line 6 :  * device's "struct device" holds this information.
gpio_tilt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\input) line 69 : 	int (*enable)(struct device *dev);
gpio_tilt.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\input) line 70 : 	void (*disable)(struct device *dev);
matrix_keypad.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\input) line 93 : int matrix_keypad_parse_of_params(struct device *dev,
matrix_keypad.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\input) line 96 : static inline int matrix_keypad_parse_of_params(struct device *dev,
arm-gic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 76 : struct device_node;
arm-gic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 81 : 		    u32 offset, struct device_node *);
arm-vic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 29 : struct device_node;
arm-vic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 33 : 		u32 resume_sources, struct device_node *node);
spear-shirq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 57 : int __init spear300_shirq_of_init(struct device_node *np,
spear-shirq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 58 : 		struct device_node *parent);
spear-shirq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 59 : int __init spear310_shirq_of_init(struct device_node *np,
spear-shirq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 60 : 		struct device_node *parent);
spear-shirq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 61 : int __init spear320_shirq_of_init(struct device_node *np,
spear-shirq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 62 : 		struct device_node *parent);
versatile-fpga.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 4 : struct device_node;
versatile-fpga.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 9 : 		struct device_node *node);
versatile-fpga.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 10 : int fpga_irq_of_init(struct device_node *node,
versatile-fpga.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 11 : 		     struct device_node *parent);
xtensa-mx.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 14 : struct device_node;
xtensa-mx.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 15 : int xtensa_mx_init_legacy(struct device_node *interrupt_parent);
xtensa-pic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 15 : struct device_node;
xtensa-pic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\irqchip) line 16 : int xtensa_pic_init_legacy(struct device_node *interrupt_parent);
88pm80x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 295 : 	struct device *dev;
88pm80x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 345 : static inline int pm80x_dev_suspend(struct device *dev)
88pm80x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 357 : static inline int pm80x_dev_resume(struct device *dev)
88pm860x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 380 : 	struct device		*dev;
aat2870.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 133 : 	struct device *dev;
ab3100.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 11 : struct device;
ab3100.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 95 : 	struct device *dev;
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 16 : struct device;
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 304 : int ab8500_bm_of_probe(struct device *dev,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 305 : 		       struct device_node *np,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 308 : int abx500_set_register_interruptible(struct device *dev, u8 bank, u8 reg,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 310 : int abx500_get_register_interruptible(struct device *dev, u8 bank, u8 reg,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 312 : int abx500_get_register_page_interruptible(struct device *dev, u8 bank,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 314 : int abx500_set_register_page_interruptible(struct device *dev, u8 bank,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 328 : int abx500_mask_and_set_register_interruptible(struct device *dev, u8 bank,
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 330 : int abx500_get_chip_id(struct device *dev);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 331 : int abx500_event_registers_startup_state_get(struct device *dev, u8 *event);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 332 : int abx500_startup_irq_enabled(struct device *dev, unsigned int irq);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 336 : 	int (*get_chip_id) (struct device *);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 337 : 	int (*get_register) (struct device *, u8, u8, u8 *);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 338 : 	int (*set_register) (struct device *, u8, u8, u8);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 339 : 	int (*get_register_page) (struct device *, u8, u8, u8 *, u8);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 340 : 	int (*set_register_page) (struct device *, u8, u8, u8 *, u8);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 341 : 	int (*mask_and_set_register) (struct device *, u8, u8, u8, u8);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 342 : 	int (*event_registers_startup_state_get) (struct device *, u8 *);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 343 : 	int (*startup_irq_enabled) (struct device *, unsigned int);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 344 : 	void (*dump_all_banks) (struct device *);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 347 : int abx500_register_ops(struct device *core_dev, struct abx500_ops *ops);
abx500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 348 : void abx500_remove_ops(struct device *dev);
adp5520.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 288 : extern int adp5520_read(struct device *dev, int reg, uint8_t *val);
adp5520.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 289 : extern int adp5520_write(struct device *dev, int reg, u8 val);
adp5520.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 290 : extern int adp5520_clr_bits(struct device *dev, int reg, uint8_t bit_mask);
adp5520.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 291 : extern int adp5520_set_bits(struct device *dev, int reg, uint8_t bit_mask);
adp5520.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 293 : extern int adp5520_register_notifier(struct device *dev,
adp5520.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 296 : extern int adp5520_unregister_notifier(struct device *dev,
as3711.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 74 : struct device;
as3711.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 78 : 	struct device *dev;
as3722.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 387 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 106 : extern int mfd_add_devices(struct device *parent, int id,
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 111 : extern void mfd_remove_devices(struct device *parent);
cros_ec.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 105 : 	struct device *parent;
cros_ec.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 108 : 	struct device *dev;
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 203 : extern int da903x_register_notifier(struct device *dev,
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 205 : extern int da903x_unregister_notifier(struct device *dev,
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 234 : extern int da903x_query_status(struct device *dev, unsigned int status);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 240 : extern int da903x_write(struct device *dev, int reg, uint8_t val);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 241 : extern int da903x_writes(struct device *dev, int reg, int len, uint8_t *val);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 242 : extern int da903x_read(struct device *dev, int reg, uint8_t *val);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 243 : extern int da903x_reads(struct device *dev, int reg, int len, uint8_t *val);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 244 : extern int da903x_update(struct device *dev, int reg, uint8_t val, uint8_t mask);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 245 : extern int da903x_set_bits(struct device *dev, int reg, uint8_t bit_mask);
da903x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 246 : extern int da903x_clr_bits(struct device *dev, int reg, uint8_t bit_mask);
davinci_voicecodec.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 112 : 	struct device *dev;
htc-egpio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 55 : extern int htc_egpio_get_wakeup_irq(struct device *dev);
htc-pasic3.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 18 : extern void pasic3_write_register(struct device *dev, u32 reg, u8 val);
htc-pasic3.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 19 : extern u8 pasic3_read_register(struct device *dev, u32 reg);
kempld.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 91 : 	struct device		*dev;
lm3533.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 22 : struct device;
lm3533.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 26 : 	struct device *dev;
lm3533.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 40 : 	struct device *dev;
lp3943.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 104 : 	struct device *dev;
lp8788.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 337 : 	struct device *dev;
max14577-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 282 : 	struct device *dev;
max14577.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 46 : 	struct device_node *of_node;
max77686-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 219 : 	struct device *dev;
max77686.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 77 : 	struct device_node *of_node;
max77693-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 311 : 	struct device *dev;
max77693.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 44 : 	struct device_node *of_node;
max8907.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 241 : 	struct device			*dev;
max8925.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 196 : 	struct device		*dev;
max8997-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 382 : 	struct device *dev;
max8997.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 78 : 	struct device_node *reg_node;
max8998-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 153 : 	struct device *dev;
max8998.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 66 : 	struct device_node		*reg_node;
mc13xxx.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 78 : 	struct device_node *node;
mcp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 24 : 	struct device	attached_device;
mcp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 44 : struct mcp *mcp_host_alloc(struct device *, size_t);
mcp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 50 : 	struct device_driver drv;
menelaus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 8 : struct device;
menelaus.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 11 : 	int (* late_init)(struct device *dev);
palmas.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 62 : 	struct device *dev;
palmas.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 322 : 	struct device *dev;
palmas.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 396 : 	struct device *dev;
palmas.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 411 : 	struct device *dev;
palmas.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 416 : 	struct device *dev;
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 297 : 	struct device	*dev;
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 337 : static inline int rc5t583_write(struct device *dev, uint8_t reg, uint8_t val)
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 343 : static inline int rc5t583_read(struct device *dev, uint8_t reg, uint8_t *val)
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 354 : static inline int rc5t583_set_bits(struct device *dev, unsigned int reg,
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 361 : static inline int rc5t583_clear_bits(struct device *dev, unsigned int reg,
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 368 : static inline int rc5t583_update(struct device *dev, unsigned int reg,
rc5t583.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 375 : int rc5t583_ext_power_req_config(struct device *dev, int deepsleep_id,
si476x-core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 168 : static inline struct si476x_core *i2c_mfd_cell_to_core(struct device *dev)
smsc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 31 : 	struct device *dev;
smsc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 42 : static inline int smsc_read(struct device *child, unsigned int reg,
smsc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 50 : static inline int smsc_write(struct device *child, unsigned int reg,
stmpe.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 13 : struct device;
stmpe.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 85 : 	struct device *dev;
syscon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 18 : struct device_node;
syscon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 21 : extern struct regmap *syscon_node_to_regmap(struct device_node *np);
syscon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 25 : 					struct device_node *np,
syscon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 28 : static inline struct regmap *syscon_node_to_regmap(struct device_node *np)
syscon.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 44 : 					struct device_node *np,
tc3589x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 10 : struct device;
tc3589x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 118 : 	struct device *dev;
ti_am335x_tscadc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 153 : 	struct device *dev;
ti_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 86 : int ti_ssp_raw_read(struct device *dev);
ti_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 87 : int ti_ssp_raw_write(struct device *dev, u32 val);
ti_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 88 : int ti_ssp_load(struct device *dev, int offs, u32* prog, int len);
ti_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 89 : int ti_ssp_run(struct device *dev, u32 pc, u32 input, u32 *output);
ti_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 90 : int ti_ssp_set_mode(struct device *dev, int mode);
ti_ssp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 91 : int ti_ssp_set_iosel(struct device *dev, u32 iosel);
tmio.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 115 : 	struct device			*dev;
tps6507x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 157 : 	struct device *dev;
tps65090.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 68 : 	struct device		*dev;
tps65090.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 102 : static inline int tps65090_write(struct device *dev, int reg, uint8_t val)
tps65090.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 109 : static inline int tps65090_read(struct device *dev, int reg, uint8_t *val)
tps65090.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 121 : static inline int tps65090_set_bits(struct device *dev, int reg,
tps65090.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 129 : static inline int tps65090_clr_bits(struct device *dev, int reg,
tps65217.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 242 : 	struct device_node *of_node[TPS65217_NUM_REGULATOR];
tps65217.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 253 : 	struct device *dev;
tps65217.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 261 : static inline struct tps65217 *dev_to_tps65217(struct device *dev)
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 79 : 	struct device_node *of_node;
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 97 : extern int tps6586x_write(struct device *dev, int reg, uint8_t val);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 98 : extern int tps6586x_writes(struct device *dev, int reg, int len, uint8_t *val);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 99 : extern int tps6586x_read(struct device *dev, int reg, uint8_t *val);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 100 : extern int tps6586x_reads(struct device *dev, int reg, int len, uint8_t *val);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 101 : extern int tps6586x_set_bits(struct device *dev, int reg, uint8_t bit_mask);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 102 : extern int tps6586x_clr_bits(struct device *dev, int reg, uint8_t bit_mask);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 103 : extern int tps6586x_update(struct device *dev, int reg, uint8_t val,
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 105 : extern int tps6586x_irq_get_virq(struct device *dev, int irq);
tps6586x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 106 : extern int tps6586x_get_version(struct device *dev);
tps65910.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 892 : 	struct device *dev;
tps65912.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 287 : 	struct device *dev;
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 510 : 	struct device		*dev;
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 547 : static inline int tps80031_write(struct device *dev, int sid,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 555 : static inline int tps80031_writes(struct device *dev, int sid, int reg,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 563 : static inline int tps80031_read(struct device *dev, int sid,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 580 : static inline int tps80031_reads(struct device *dev, int sid,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 588 : static inline int tps80031_set_bits(struct device *dev, int sid,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 597 : static inline int tps80031_clr_bits(struct device *dev, int sid,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 605 : static inline int tps80031_update(struct device *dev, int sid,
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 613 : static inline unsigned long tps80031_get_chip_info(struct device *dev)
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 620 : static inline int tps80031_get_pmu_version(struct device *dev)
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 627 : static inline int tps80031_irq_get_virq(struct device *dev, int irq)
tps80031.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 634 : extern int tps80031_ext_power_req_config(struct device *dev,
twl6040.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 221 : 	struct device *dev;
ucb1x00.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 138 : 	struct device		dev;
wm8400-private.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 32 : 	struct device *dev;
wm8400.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 34 : 	int (*platform_init)(struct device *dev);
wm8400.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd) line 37 : int wm8400_register_regulator(struct device *dev, int reg,
ab8500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\abx500) line 14 : struct device;
ab8500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\abx500) line 346 : 	struct device	*dev;
ab8500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\abx500) line 510 : void ab8500_dump_all_banks(struct device *dev);
ab8500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\abx500) line 513 : static inline void ab8500_dump_all_banks(struct device *dev) {}
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\arizona) line 88 : 	struct device *dev;
da9052.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\da9052) line 91 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\da9055) line 44 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\da9063) line 73 : 	struct device	*dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pcf50633) line 137 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pcf50633) line 226 : static inline struct pcf50633 *dev_to_pcf50633(struct device *dev)
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 24 : 	int	(*pmic_readb) (const struct device *dev, u16 addr, u8 *val);
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 25 : 	int	(*pmic_writeb) (const struct device *dev, u16 addr, u8 val);
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 26 : 	int	(*pmic_read_buf) (const struct device *dev, u16 addr, u8 *buf,
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 28 : 	int	(*pmic_write_buf) (const struct device *dev, u16 addr, u8 *buf,
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 30 : 	int	(*pmic_read_irq_stat) (const struct device *dev, int irq);
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 34 : static inline int pm8xxx_readb(const struct device *dev, u16 addr, u8 *val)
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 43 : static inline int pm8xxx_writeb(const struct device *dev, u16 addr, u8 val)
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 52 : static inline int pm8xxx_read_buf(const struct device *dev, u16 addr, u8 *buf,
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 62 : static inline int pm8xxx_write_buf(const struct device *dev, u16 addr, u8 *buf,
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 72 : static inline int pm8xxx_read_irq_stat(const struct device *dev, int irq)
irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 40 : struct pm_irq_chip *pm8xxx_irq_init(struct device *dev,
irq.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\pm8xxx) line 49 : 				const struct device *dev,
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\samsung) line 40 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\samsung) line 122 : 	struct device_node *reg_node;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\wm831x) line 366 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\wm8350) line 595 : 	struct device *classdev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\wm8350) line 599 : 	struct device *dev;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mfd\wm8994) line 65 : 	struct device *dev;
card.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 242 : 	struct device		dev;		/* the device */
card.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 527 : 	struct device_driver drv;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 211 : struct device_node;
core.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 213 : extern int mmc_of_parse_voltage(struct device_node *np, u32 *mask);
dw_mmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 167 : 	struct device		*dev;
host.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 145 : struct device;
host.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 199 : 	struct device		*parent;
host.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 200 : 	struct device		class_dev;
host.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 296 : 	struct device_attribute clkgate_delay_attr;
host.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 368 : struct mmc_host *mmc_alloc_host(int extra, struct device *);
sdio_func.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 40 : 	struct device		dev;		/* the device */
sdio_func.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mmc) line 84 : 	struct device_driver drv;
map.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mtd) line 248 : 	struct device_node *device_node;
mtd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mtd) line 251 : 	struct device dev;
partitions.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mtd) line 54 : struct device_node;
partitions.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mtd) line 63 : 	struct device_node *of_node;
plat-ram.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mtd) line 31 : 	void	(*set_rw)(struct device *dev, int to);
spear_smi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\mtd) line 62 : 	struct device_node *np[MAX_NUM_FLASH_CHIP];
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 60 : 	struct device		dev;
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 78 : 	struct device		*dev;
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 81 : 	struct phy * (*of_xlate)(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 148 : struct phy *phy_get(struct device *dev, const char *string);
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 149 : struct phy *phy_optional_get(struct device *dev, const char *string);
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 150 : struct phy *devm_phy_get(struct device *dev, const char *string);
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 151 : struct phy *devm_phy_optional_get(struct device *dev, const char *string);
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 153 : void devm_phy_put(struct device *dev, struct phy *phy);
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 154 : struct phy *of_phy_simple_xlate(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 156 : struct phy *phy_create(struct device *dev, const struct phy_ops *ops,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 158 : struct phy *devm_phy_create(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 161 : void devm_phy_destroy(struct device *dev, struct phy *phy);
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 162 : struct phy_provider *__of_phy_provider_register(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 163 : 	struct module *owner, struct phy * (*of_xlate)(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 165 : struct phy_provider *__devm_of_phy_provider_register(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 166 : 	struct module *owner, struct phy * (*of_xlate)(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 169 : void devm_of_phy_provider_unregister(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 232 : static inline struct phy *phy_get(struct device *dev, const char *string)
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 237 : static inline struct phy *phy_optional_get(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 243 : static inline struct phy *devm_phy_get(struct device *dev, const char *string)
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 248 : static inline struct phy *devm_phy_optional_get(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 258 : static inline void devm_phy_put(struct device *dev, struct phy *phy)
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 262 : static inline struct phy *of_phy_simple_xlate(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 268 : static inline struct phy *phy_create(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 274 : static inline struct phy *devm_phy_create(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 284 : static inline void devm_phy_destroy(struct device *dev, struct phy *phy)
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 289 : 	struct device *dev, struct module *owner, struct phy * (*of_xlate)(
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 290 : 	struct device *dev, struct of_phandle_args *args))
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 295 : static inline struct phy_provider *__devm_of_phy_provider_register(struct device
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 296 : 	*dev, struct module *owner, struct phy * (*of_xlate)(struct device *dev,
phy.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\phy) line 306 : static inline void devm_of_phy_provider_unregister(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 23 : struct device;
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 33 : extern struct pinctrl * __must_check pinctrl_get(struct device *dev);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 40 : extern struct pinctrl * __must_check devm_pinctrl_get(struct device *dev);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 44 : extern int pinctrl_pm_select_default_state(struct device *dev);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 45 : extern int pinctrl_pm_select_sleep_state(struct device *dev);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 46 : extern int pinctrl_pm_select_idle_state(struct device *dev);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 48 : static inline int pinctrl_pm_select_default_state(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 52 : static inline int pinctrl_pm_select_sleep_state(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 56 : static inline int pinctrl_pm_select_idle_state(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 83 : static inline struct pinctrl * __must_check pinctrl_get(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 105 : static inline struct pinctrl * __must_check devm_pinctrl_get(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 114 : static inline int pinctrl_pm_select_default_state(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 119 : static inline int pinctrl_pm_select_sleep_state(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 124 : static inline int pinctrl_pm_select_idle_state(struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 132 : 					struct device *dev, const char *name)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 158 : 					struct device *dev)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 164 : 					struct device *dev, const char *name)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 190 : 					struct device *dev)
devinfo.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 37 : extern int pinctrl_bind_pins(struct device *dev);
devinfo.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 43 : static inline int pinctrl_bind_pins(struct device *dev)
machine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 57 :  *	must be the same as in your struct device*. If this name is set to the
machine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 64 :  *	the name must be the same as in your struct device*. This field is not
pinconf-generic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 154 : 		struct device_node *np, struct pinctrl_map **map,
pinconf-generic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 158 : 		struct device_node *np_config, struct pinctrl_map **map,
pinconf-generic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 162 : 		struct pinctrl_dev *pctldev, struct device_node *np_config,
pinconf-generic.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 170 : 		struct pinctrl_dev *pctldev, struct device_node *np_config,
pinctrl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 22 : struct device;
pinctrl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 28 : struct device_node;
pinctrl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 100 : 			       struct device_node *np_config,
pinctrl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 133 : 				struct device *dev, void *driver_data);
pinctrl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 154 : extern struct pinctrl_dev *of_pinctrl_get(struct device_node *np);
pinctrl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\pinctrl) line 157 : struct pinctrl_dev *of_pinctrl_get(struct device_node *np)
bd6107.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 11 : struct device;
bd6107.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 14 : 	struct device *fbdev;
camera-mx3.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 47 : 	struct device *dma_dev;
coda.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 12 : struct device;
coda.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 15 : 	struct device *iram_dev;
cyttsp4.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 61 : 		struct device *dev);
cyttsp4.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 63 : 		int on, struct device *dev);
cyttsp4.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 65 : 		int on, struct device *dev, atomic_t *ignore_irq);
cyttsp4.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 67 : 		struct device *dev);
dma-atmel.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 32 : 	struct device		*dma_dev;
dmtimer-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 28 : 	int (*get_context_loss_count)(struct device *);
elm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 51 : void elm_decode_bch_error_page(struct device *dev, u8 *ecc_calc,
elm.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 53 : int elm_config(struct device *dev, enum bch_ecc bch_type);
gpio-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 208 : 	int (*get_context_loss_count)(struct device *dev);
gpio_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 11 : struct device;
gpio_backlight.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 14 : 	struct device *fbdev;
irda-pxaficp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 12 : 	void (*transceiver_mode)(struct device *dev, int mode);
irda-pxaficp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 13 : 	int (*startup)(struct device *dev);
irda-pxaficp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 14 : 	void (*shutdown)(struct device *dev);
irda-pxaficp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 22 : void pxa2xx_transceiver_mode(struct device *dev, int mode);
keypad-w90p910.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 6 : extern void mfp_set_groupi(struct device *dev);
keyscan-davinci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 32 : 	int		(*device_enable)(struct device *dev);
lv5207lp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 11 : struct device;
lv5207lp.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 14 : 	struct device *fbdev;
mmc-msm_sdcc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 23 : 	u32 (*translate_vdd)(struct device *, unsigned int);
mmc-msm_sdcc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 24 : 	unsigned int (*status)(struct device *);
mmc-mxcmmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 6 : struct device;
mmc-mxcmmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 18 : 	int (*get_ro)(struct device *);
mmc-mxcmmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 24 : 	int (*init)(struct device *dev, irq_handler_t handler, void *data);
mmc-mxcmmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 25 : 	void (*exit)(struct device *dev, void *data);
mmc-mxcmmc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 33 : 	void (*setpower)(struct device *, unsigned int vdd);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 40 : 	struct device *dev;
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 50 : 	int (*switch_slot)(struct device *dev, int slot);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 53 : 	int (*init)(struct device *dev);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 54 : 	void (*cleanup)(struct device *dev);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 55 : 	void (*shutdown)(struct device *dev);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 58 : 	int (*suspend)(struct device *dev, int slot);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 59 : 	int (*resume)(struct device *dev, int slot);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 62 : 	int (*get_context_loss_count)(struct device *dev);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 119 : 		int (*set_bus_mode)(struct device *dev, int slot, int bus_mode);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 120 : 		int (*set_power)(struct device *dev, int slot,
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 122 : 		int (*get_ro)(struct device *dev, int slot);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 123 : 		void (*remux)(struct device *dev, int slot, int power_on);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 125 : 		void (*before_set_reg)(struct device *dev, int slot,
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 128 : 		void (*after_set_reg)(struct device *dev, int slot,
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 139 : 		int (*get_cover_state)(struct device *dev, int slot);
mmc-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 146 : 		int (*card_detect)(struct device *dev, int slot);
mmc-pxamci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 7 : struct device;
mmc-pxamci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 13 : 	int (*init)(struct device *, irq_handler_t , void *);
mmc-pxamci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 14 : 	int (*get_ro)(struct device *);
mmc-pxamci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 15 : 	int (*setpower)(struct device *, unsigned int);
mmc-pxamci.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 16 : 	void (*exit)(struct device *, void *);
mtd-nand-omap2.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 66 : 	struct device_node	*of_node;
mtd-nand-omap2.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 67 : 	struct device_node	*elm_of_node;
mtd-onenand-omap2.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 32 : 	struct device_node	*of_node;
omap1_bl.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 8 : 	int (*set_power)(struct device *dev, int state);
serial-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 45 : 	int (*get_context_loss_count)(struct device *);
serial-omap.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 46 : 	void (*enable_wakeup)(struct device *, bool);
spi-nuc900.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 15 : extern void mfp_set_groupg(struct device *dev, const char *subname);
usb-imx_udc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 19 : 	int (*init)(struct device *);
usb-imx_udc.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 20 : 	void (*exit)(struct device *);
usb-musb-ux500.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 20 : void ux500_add_usb(struct device *parent, resource_size_t base,
usb-ohci-pxa27x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 4 : struct device;
usb-ohci-pxa27x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 7 : 	int (*init)(struct device *);
usb-ohci-pxa27x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 8 : 	void (*exit)(struct device *);
usb-pxa3xx-ulpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 23 : 	int (*init)(struct device *);
usb-pxa3xx-ulpi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 24 : 	void (*exit)(struct device *);
video-msm_fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 115 : 	struct device dev;
video-mx3fb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 46 : 	struct device			*dma_dev;
video-pxafb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 156 : void pxa_set_fb_info(struct device *, struct pxafb_mach_info *);
video-pxafb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\platform_data) line 157 : unsigned long pxafb_get_hsync_time(struct device *dev);
bq27x00_battery.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\power) line 16 : 	int (*read)(struct device *dev, unsigned int);
charger-manager.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\power) line 145 : 	struct device_attribute attr_name;
charger-manager.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\power) line 146 : 	struct device_attribute attr_state;
charger-manager.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\power) line 147 : 	struct device_attribute attr_externally_control;
charger-manager.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\power) line 253 : 	struct device *dev;
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 38 : struct device;
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 134 : struct regulator *__must_check regulator_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 136 : struct regulator *__must_check devm_regulator_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 138 : struct regulator *__must_check regulator_get_exclusive(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 140 : struct regulator *__must_check devm_regulator_get_exclusive(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 142 : struct regulator *__must_check regulator_get_optional(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 144 : struct regulator *__must_check devm_regulator_get_optional(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 149 : int regulator_register_supply_alias(struct device *dev, const char *id,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 150 : 				    struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 152 : void regulator_unregister_supply_alias(struct device *dev, const char *id);
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 154 : int regulator_bulk_register_supply_alias(struct device *dev, const char **id,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 155 : 					 struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 157 : void regulator_bulk_unregister_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 160 : int devm_regulator_register_supply_alias(struct device *dev, const char *id,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 161 : 					 struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 163 : void devm_regulator_unregister_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 166 : int devm_regulator_bulk_register_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 168 : 					      struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 171 : void devm_regulator_bulk_unregister_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 182 : int __must_check regulator_bulk_get(struct device *dev, int num_consumers,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 184 : int __must_check devm_regulator_bulk_get(struct device *dev, int num_consumers,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 232 : static inline struct regulator *__must_check regulator_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 247 : devm_regulator_get(struct device *dev, const char *id)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 253 : regulator_get_exclusive(struct device *dev, const char *id)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 259 : regulator_get_optional(struct device *dev, const char *id)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 266 : devm_regulator_get_optional(struct device *dev, const char *id)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 279 : static inline int regulator_register_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 281 : 						  struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 287 : static inline void regulator_unregister_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 292 : static inline int regulator_bulk_register_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 294 : 						       struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 301 : static inline void regulator_bulk_unregister_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 307 : static inline int devm_regulator_register_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 309 : 						       struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 315 : static inline void devm_regulator_unregister_supply_alias(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 321 : 		struct device *dev, const char **id, struct device *alias_dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 328 : 		struct device *dev, const char **id, int num_id)
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 358 : static inline int regulator_bulk_get(struct device *dev,
consumer.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 365 : static inline int devm_regulator_bulk_get(struct device *dev, int num_consumers,
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 280 :  * @dev: struct device for the regulator
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 292 : 	struct device *dev;
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 295 : 	struct device_node *of_node;
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 329 : 	struct device dev;
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 349 : devm_regulator_register(struct device *dev,
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 353 : void devm_regulator_unregister(struct device *dev, struct regulator_dev *rdev);
driver.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 359 : struct device *rdev_get_dev(struct regulator_dev *rdev);
machine.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 146 :  * buses which make struct device available late such as I2C.
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 13 : 	struct device_node *of_node;
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 18 : 	*of_get_regulator_init_data(struct device *dev,
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 19 : 				    struct device_node *node);
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 20 : extern int of_regulator_match(struct device *dev, struct device_node *node,
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 25 : 	*of_get_regulator_init_data(struct device *dev,
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 26 : 				    struct device_node *node)
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 31 : static inline int of_regulator_match(struct device *dev,
of_regulator.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\regulator) line 32 : 				     struct device_node *node,
m48t59.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\rtc) line 53 : 	void (*write_byte)(struct device *dev, u32 ofs, u8 val);
m48t59.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\rtc) line 54 : 	unsigned char (*read_byte)(struct device *dev, u32 ofs);
ad7877.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 4 :  * platform_data for the device's "struct device" holds this information.
ad7879.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 4 :  * platform_data for the device's "struct device" holds this information.
ads7846.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 4 :  * platform_data for the device's "struct device" holds this information.
max7301.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 16 : 	struct device *dev;
max7301.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 17 : 	int (*write)(struct device *dev, unsigned int reg, unsigned int val);
max7301.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 18 : 	int (*read)(struct device *dev, unsigned int reg);
max7301.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 33 : extern int __max730x_remove(struct device *dev);
mmc_spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 7 : struct device;
mmc_spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 20 :  * switch the "struct device *" parameters over to "struct spi_device *".
mmc_spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 24 : 	int (*init)(struct device *,
mmc_spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 27 : 	void (*exit)(struct device *, void *);
mmc_spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 49 : 	void (*setpower)(struct device *, unsigned int maskval);
mxs-spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 134 : 	struct device			*dev;
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 74 : 	struct device		dev;
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 113 : static inline struct spi_device *to_spi_device(struct device *dev)
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 190 : 	struct device_driver	driver;
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 193 : static inline struct spi_driver *to_spi_driver(struct device_driver *drv)
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 311 : 	struct device	dev;
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 467 : spi_alloc_master(struct device *host, unsigned size);
spi.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\spi) line 470 : extern int devm_spi_register_master(struct device *dev,
ssb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\ssb) line 254 :  * following ugly workaround to get from struct device to struct ssb_device */
ssb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\ssb) line 256 : 	struct device dev;
ssb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\ssb) line 265 : 	struct device *dev, *dma_dev;
ssb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\ssb) line 278 : /* Go from struct device to struct ssb_device. */
ssb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\ssb) line 280 : struct ssb_device * dev_to_ssb_dev(struct device *dev)
ssb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\ssb) line 318 : 	struct device_driver drv;
chipidea.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 39 : struct platform_device *ci_hdrc_add_device(struct device *dev,
gadget.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 555 : 	struct device			dev;
gadget.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 573 : static inline struct usb_gadget *dev_to_usb_gadget(struct device *dev)
gadget.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 878 : 	struct device_driver	driver;
gadget.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 920 : extern int usb_add_gadget_udc_release(struct device *parent,
gadget.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 921 : 		struct usb_gadget *gadget, void (*release)(struct device *dev));
gadget.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 922 : extern int usb_add_gadget_udc(struct device *parent, struct usb_gadget *gadget);
hcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 419 : 		struct device *dev, const char *bus_name);
hcd.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 421 : 		struct device *dev, const char *bus_name,
isp116x.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 30 : 	void (*delay) (struct device *dev, int delay);
isp1301.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 78 : struct i2c_client *isp1301_get_client(struct device_node *node);
isp1362.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 33 : 	void (*reset) (struct device *dev, int set);
isp1362.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 35 : 	void (*clock) (struct device *dev, int start);
isp1362.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 43 : 	void (*delay) (struct device *dev, unsigned int delay);
musb.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 109 : 	int		(*set_vbus)(struct device *dev, int is_on);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 15 : enum usb_dr_mode of_usb_get_dr_mode(struct device_node *np);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 16 : enum usb_device_speed of_usb_get_maximum_speed(struct device_node *np);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 18 : static inline enum usb_dr_mode of_usb_get_dr_mode(struct device_node *np)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 24 : of_usb_get_maximum_speed(struct device_node *np)
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 31 : enum usb_phy_interface of_usb_get_phy_mode(struct device_node *np);
of.h (D:\Virtual Machines\Shared\linux-3.14\include\linux\usb) line 33 : static inline enum usb_phy_interface of_usb_get_phy_mode(struct device_node *np)
